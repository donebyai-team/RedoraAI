// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package ai

import (
	"errors"
	"fmt"
)

const (
	// PromptFeatureIMAGEONLY is a PromptFeature of type IMAGE_ONLY.
	PromptFeatureIMAGEONLY PromptFeature = "IMAGE_ONLY"
	// PromptFeatureTEXTONLY is a PromptFeature of type TEXT_ONLY.
	PromptFeatureTEXTONLY PromptFeature = "TEXT_ONLY"
	// PromptFeatureBOTH is a PromptFeature of type BOTH.
	PromptFeatureBOTH PromptFeature = "BOTH"
)

var ErrInvalidPromptFeature = errors.New("not a valid PromptFeature")

// String implements the Stringer interface.
func (x PromptFeature) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x PromptFeature) IsValid() bool {
	_, err := ParsePromptFeature(string(x))
	return err == nil
}

var _PromptFeatureValue = map[string]PromptFeature{
	"IMAGE_ONLY": PromptFeatureIMAGEONLY,
	"TEXT_ONLY":  PromptFeatureTEXTONLY,
	"BOTH":       PromptFeatureBOTH,
}

// ParsePromptFeature attempts to convert a string to a PromptFeature.
func ParsePromptFeature(name string) (PromptFeature, error) {
	if x, ok := _PromptFeatureValue[name]; ok {
		return x, nil
	}
	return PromptFeature(""), fmt.Errorf("%s is %w", name, ErrInvalidPromptFeature)
}

const (
	// PromptTypeHUMAN is a PromptType of type HUMAN.
	PromptTypeHUMAN PromptType = "HUMAN"
	// PromptTypeSYSTEM is a PromptType of type SYSTEM.
	PromptTypeSYSTEM PromptType = "SYSTEM"
	// PromptTypeIMAGE is a PromptType of type IMAGE.
	PromptTypeIMAGE PromptType = "IMAGE"
	// PromptTypeRESPONSESCHEMA is a PromptType of type RESPONSE_SCHEMA.
	PromptTypeRESPONSESCHEMA PromptType = "RESPONSE_SCHEMA"
)

var ErrInvalidPromptType = errors.New("not a valid PromptType")

// String implements the Stringer interface.
func (x PromptType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x PromptType) IsValid() bool {
	_, err := ParsePromptType(string(x))
	return err == nil
}

var _PromptTypeValue = map[string]PromptType{
	"HUMAN":           PromptTypeHUMAN,
	"SYSTEM":          PromptTypeSYSTEM,
	"IMAGE":           PromptTypeIMAGE,
	"RESPONSE_SCHEMA": PromptTypeRESPONSESCHEMA,
}

// ParsePromptType attempts to convert a string to a PromptType.
func ParsePromptType(name string) (PromptType, error) {
	if x, ok := _PromptTypeValue[name]; ok {
		return x, nil
	}
	return PromptType(""), fmt.Errorf("%s is %w", name, ErrInvalidPromptType)
}
