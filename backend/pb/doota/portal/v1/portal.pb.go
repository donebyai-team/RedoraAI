// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: doota/portal/v1/portal.proto

package pbportal

import (
	v1 "github.com/shank318/doota/pb/doota/core/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DateRangeFilter int32

const (
	DateRangeFilter_DATE_RANGE_UNSPECIFIED DateRangeFilter = 0
	DateRangeFilter_DATE_RANGE_TODAY       DateRangeFilter = 1
	DateRangeFilter_DATE_RANGE_YESTERDAY   DateRangeFilter = 2
	DateRangeFilter_DATE_RANGE_7_DAYS      DateRangeFilter = 3
)

// Enum value maps for DateRangeFilter.
var (
	DateRangeFilter_name = map[int32]string{
		0: "DATE_RANGE_UNSPECIFIED",
		1: "DATE_RANGE_TODAY",
		2: "DATE_RANGE_YESTERDAY",
		3: "DATE_RANGE_7_DAYS",
	}
	DateRangeFilter_value = map[string]int32{
		"DATE_RANGE_UNSPECIFIED": 0,
		"DATE_RANGE_TODAY":       1,
		"DATE_RANGE_YESTERDAY":   2,
		"DATE_RANGE_7_DAYS":      3,
	}
)

func (x DateRangeFilter) Enum() *DateRangeFilter {
	p := new(DateRangeFilter)
	*p = x
	return p
}

func (x DateRangeFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DateRangeFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_doota_portal_v1_portal_proto_enumTypes[0].Descriptor()
}

func (DateRangeFilter) Type() protoreflect.EnumType {
	return &file_doota_portal_v1_portal_proto_enumTypes[0]
}

func (x DateRangeFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DateRangeFilter.Descriptor instead.
func (DateRangeFilter) EnumDescriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{0}
}

type OauthAuthorizeType int32

const (
	OauthAuthorizeType_OAUTH_AUTHORIZE_TYPE_UNSPECIFIED OauthAuthorizeType = 0
	OauthAuthorizeType_OAUTH_AUTHORIZE_TYPE_INTEGRATION OauthAuthorizeType = 1
)

// Enum value maps for OauthAuthorizeType.
var (
	OauthAuthorizeType_name = map[int32]string{
		0: "OAUTH_AUTHORIZE_TYPE_UNSPECIFIED",
		1: "OAUTH_AUTHORIZE_TYPE_INTEGRATION",
	}
	OauthAuthorizeType_value = map[string]int32{
		"OAUTH_AUTHORIZE_TYPE_UNSPECIFIED": 0,
		"OAUTH_AUTHORIZE_TYPE_INTEGRATION": 1,
	}
)

func (x OauthAuthorizeType) Enum() *OauthAuthorizeType {
	p := new(OauthAuthorizeType)
	*p = x
	return p
}

func (x OauthAuthorizeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OauthAuthorizeType) Descriptor() protoreflect.EnumDescriptor {
	return file_doota_portal_v1_portal_proto_enumTypes[1].Descriptor()
}

func (OauthAuthorizeType) Type() protoreflect.EnumType {
	return &file_doota_portal_v1_portal_proto_enumTypes[1]
}

func (x OauthAuthorizeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OauthAuthorizeType.Descriptor instead.
func (OauthAuthorizeType) EnumDescriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{1}
}

type UserRole int32

const (
	UserRole_USER_ROLE_UNSPECIFIED    UserRole = 0
	UserRole_USER_ROLE_USER           UserRole = 1
	UserRole_USER_ROLE_ADMIN          UserRole = 2
	UserRole_USER_ROLE_PLATFORM_ADMIN UserRole = 3
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "USER_ROLE_UNSPECIFIED",
		1: "USER_ROLE_USER",
		2: "USER_ROLE_ADMIN",
		3: "USER_ROLE_PLATFORM_ADMIN",
	}
	UserRole_value = map[string]int32{
		"USER_ROLE_UNSPECIFIED":    0,
		"USER_ROLE_USER":           1,
		"USER_ROLE_ADMIN":          2,
		"USER_ROLE_PLATFORM_ADMIN": 3,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_doota_portal_v1_portal_proto_enumTypes[2].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_doota_portal_v1_portal_proto_enumTypes[2]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{2}
}

type NotificationFrequency int32

const (
	NotificationFrequency_NOTIFICATION_FREQUENCY_NONE   NotificationFrequency = 0
	NotificationFrequency_NOTIFICATION_FREQUENCY_DAILY  NotificationFrequency = 1
	NotificationFrequency_NOTIFICATION_FREQUENCY_WEEKLY NotificationFrequency = 2
)

// Enum value maps for NotificationFrequency.
var (
	NotificationFrequency_name = map[int32]string{
		0: "NOTIFICATION_FREQUENCY_NONE",
		1: "NOTIFICATION_FREQUENCY_DAILY",
		2: "NOTIFICATION_FREQUENCY_WEEKLY",
	}
	NotificationFrequency_value = map[string]int32{
		"NOTIFICATION_FREQUENCY_NONE":   0,
		"NOTIFICATION_FREQUENCY_DAILY":  1,
		"NOTIFICATION_FREQUENCY_WEEKLY": 2,
	}
)

func (x NotificationFrequency) Enum() *NotificationFrequency {
	p := new(NotificationFrequency)
	*p = x
	return p
}

func (x NotificationFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_doota_portal_v1_portal_proto_enumTypes[3].Descriptor()
}

func (NotificationFrequency) Type() protoreflect.EnumType {
	return &file_doota_portal_v1_portal_proto_enumTypes[3]
}

func (x NotificationFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationFrequency.Descriptor instead.
func (NotificationFrequency) EnumDescriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{3}
}

type IntegrationType int32

const (
	IntegrationType_INTEGRATION_TYPE_UNSPECIFIED     IntegrationType = 0
	IntegrationType_INTEGRATION_TYPE_MICROSOFT       IntegrationType = 1
	IntegrationType_INTEGRATION_TYPE_GOOGLE          IntegrationType = 2
	IntegrationType_INTEGRATION_TYPE_REDDIT          IntegrationType = 3
	IntegrationType_INTEGRATION_TYPE_REDDIT_DM_LOGIN IntegrationType = 4
)

// Enum value maps for IntegrationType.
var (
	IntegrationType_name = map[int32]string{
		0: "INTEGRATION_TYPE_UNSPECIFIED",
		1: "INTEGRATION_TYPE_MICROSOFT",
		2: "INTEGRATION_TYPE_GOOGLE",
		3: "INTEGRATION_TYPE_REDDIT",
		4: "INTEGRATION_TYPE_REDDIT_DM_LOGIN",
	}
	IntegrationType_value = map[string]int32{
		"INTEGRATION_TYPE_UNSPECIFIED":     0,
		"INTEGRATION_TYPE_MICROSOFT":       1,
		"INTEGRATION_TYPE_GOOGLE":          2,
		"INTEGRATION_TYPE_REDDIT":          3,
		"INTEGRATION_TYPE_REDDIT_DM_LOGIN": 4,
	}
)

func (x IntegrationType) Enum() *IntegrationType {
	p := new(IntegrationType)
	*p = x
	return p
}

func (x IntegrationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntegrationType) Descriptor() protoreflect.EnumDescriptor {
	return file_doota_portal_v1_portal_proto_enumTypes[4].Descriptor()
}

func (IntegrationType) Type() protoreflect.EnumType {
	return &file_doota_portal_v1_portal_proto_enumTypes[4]
}

func (x IntegrationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntegrationType.Descriptor instead.
func (IntegrationType) EnumDescriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{4}
}

type IntegrationState int32

const (
	IntegrationState_INTEGRATION_STATE_UNSPECIFIED IntegrationState = 0
	IntegrationState_INTEGRATION_STATE_ACTIVE      IntegrationState = 1
	// This is a transient state not stored in the actual integration model. This will
	// be that case when for multiple reasons, the token we had for this integration is
	// revoked.
	IntegrationState_INTEGRATION_STATE_AUTH_REVOKED      IntegrationState = 2
	IntegrationState_INTEGRATION_STATE_ACCOUNT_SUSPENDED IntegrationState = 3
	IntegrationState_INTEGRATION_STATE_AUTH_EXPIRED      IntegrationState = 4
	IntegrationState_INTEGRATION_STATE_NOT_ESTABLISHED   IntegrationState = 5
)

// Enum value maps for IntegrationState.
var (
	IntegrationState_name = map[int32]string{
		0: "INTEGRATION_STATE_UNSPECIFIED",
		1: "INTEGRATION_STATE_ACTIVE",
		2: "INTEGRATION_STATE_AUTH_REVOKED",
		3: "INTEGRATION_STATE_ACCOUNT_SUSPENDED",
		4: "INTEGRATION_STATE_AUTH_EXPIRED",
		5: "INTEGRATION_STATE_NOT_ESTABLISHED",
	}
	IntegrationState_value = map[string]int32{
		"INTEGRATION_STATE_UNSPECIFIED":       0,
		"INTEGRATION_STATE_ACTIVE":            1,
		"INTEGRATION_STATE_AUTH_REVOKED":      2,
		"INTEGRATION_STATE_ACCOUNT_SUSPENDED": 3,
		"INTEGRATION_STATE_AUTH_EXPIRED":      4,
		"INTEGRATION_STATE_NOT_ESTABLISHED":   5,
	}
)

func (x IntegrationState) Enum() *IntegrationState {
	p := new(IntegrationState)
	*p = x
	return p
}

func (x IntegrationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntegrationState) Descriptor() protoreflect.EnumDescriptor {
	return file_doota_portal_v1_portal_proto_enumTypes[5].Descriptor()
}

func (IntegrationState) Type() protoreflect.EnumType {
	return &file_doota_portal_v1_portal_proto_enumTypes[5]
}

func (x IntegrationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntegrationState.Descriptor instead.
func (IntegrationState) EnumDescriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{5}
}

type GetPostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts []*v1.PostDetail `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (x *GetPostsResponse) Reset() {
	*x = GetPostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostsResponse) ProtoMessage() {}

func (x *GetPostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostsResponse.ProtoReflect.Descriptor instead.
func (*GetPostsResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{0}
}

func (x *GetPostsResponse) GetPosts() []*v1.PostDetail {
	if x != nil {
		return x.Posts
	}
	return nil
}

type InsightsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insights []*v1.PostInsight `protobuf:"bytes,1,rep,name=insights,proto3" json:"insights,omitempty"`
}

func (x *InsightsResponse) Reset() {
	*x = InsightsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsightsResponse) ProtoMessage() {}

func (x *InsightsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsightsResponse.ProtoReflect.Descriptor instead.
func (*InsightsResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{1}
}

func (x *InsightsResponse) GetInsights() []*v1.PostInsight {
	if x != nil {
		return x.Insights
	}
	return nil
}

type UpgradeSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan v1.SubscriptionPlanID `protobuf:"varint,1,opt,name=plan,proto3,enum=doota.core.v1.SubscriptionPlanID" json:"plan,omitempty"`
}

func (x *UpgradeSubscriptionRequest) Reset() {
	*x = UpgradeSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeSubscriptionRequest) ProtoMessage() {}

func (x *UpgradeSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*UpgradeSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{2}
}

func (x *UpgradeSubscriptionRequest) GetPlan() v1.SubscriptionPlanID {
	if x != nil {
		return x.Plan
	}
	return v1.SubscriptionPlanID(0)
}

type InitiateSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan        v1.SubscriptionPlanID `protobuf:"varint,1,opt,name=plan,proto3,enum=doota.core.v1.SubscriptionPlanID" json:"plan,omitempty"`
	RedirectUrl string                `protobuf:"bytes,2,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *InitiateSubscriptionRequest) Reset() {
	*x = InitiateSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateSubscriptionRequest) ProtoMessage() {}

func (x *InitiateSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*InitiateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{3}
}

func (x *InitiateSubscriptionRequest) GetPlan() v1.SubscriptionPlanID {
	if x != nil {
		return x.Plan
	}
	return v1.SubscriptionPlanID(0)
}

func (x *InitiateSubscriptionRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type InitiateSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentLink string `protobuf:"bytes,1,opt,name=payment_link,json=paymentLink,proto3" json:"payment_link,omitempty"`
}

func (x *InitiateSubscriptionResponse) Reset() {
	*x = InitiateSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateSubscriptionResponse) ProtoMessage() {}

func (x *InitiateSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*InitiateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{4}
}

func (x *InitiateSubscriptionResponse) GetPaymentLink() string {
	if x != nil {
		return x.PaymentLink
	}
	return ""
}

type VerifySubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId string `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *VerifySubscriptionRequest) Reset() {
	*x = VerifySubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySubscriptionRequest) ProtoMessage() {}

func (x *VerifySubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySubscriptionRequest.ProtoReflect.Descriptor instead.
func (*VerifySubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{5}
}

func (x *VerifySubscriptionRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type GetLeadInteractionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateRange DateRangeFilter          `protobuf:"varint,1,opt,name=date_range,json=dateRange,proto3,enum=doota.portal.v1.DateRangeFilter" json:"date_range,omitempty"`
	Status    v1.LeadInteractionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=doota.core.v1.LeadInteractionStatus" json:"status,omitempty"`
}

func (x *GetLeadInteractionsRequest) Reset() {
	*x = GetLeadInteractionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeadInteractionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadInteractionsRequest) ProtoMessage() {}

func (x *GetLeadInteractionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadInteractionsRequest.ProtoReflect.Descriptor instead.
func (*GetLeadInteractionsRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{6}
}

func (x *GetLeadInteractionsRequest) GetDateRange() DateRangeFilter {
	if x != nil {
		return x.DateRange
	}
	return DateRangeFilter_DATE_RANGE_UNSPECIFIED
}

func (x *GetLeadInteractionsRequest) GetStatus() v1.LeadInteractionStatus {
	if x != nil {
		return x.Status
	}
	return v1.LeadInteractionStatus(0)
}

type GetLeadInteractionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interactions []*v1.LeadInteraction `protobuf:"bytes,1,rep,name=interactions,proto3" json:"interactions,omitempty"`
}

func (x *GetLeadInteractionsResponse) Reset() {
	*x = GetLeadInteractionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeadInteractionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadInteractionsResponse) ProtoMessage() {}

func (x *GetLeadInteractionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadInteractionsResponse.ProtoReflect.Descriptor instead.
func (*GetLeadInteractionsResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{7}
}

func (x *GetLeadInteractionsResponse) GetInteractions() []*v1.LeadInteraction {
	if x != nil {
		return x.Interactions
	}
	return nil
}

type ConnectRedditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CookieJson string `protobuf:"bytes,1,opt,name=cookie_json,json=cookieJson,proto3" json:"cookie_json,omitempty"`
}

func (x *ConnectRedditRequest) Reset() {
	*x = ConnectRedditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRedditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRedditRequest) ProtoMessage() {}

func (x *ConnectRedditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRedditRequest.ProtoReflect.Descriptor instead.
func (*ConnectRedditRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{8}
}

func (x *ConnectRedditRequest) GetCookieJson() string {
	if x != nil {
		return x.CookieJson
	}
	return ""
}

type ConnectRedditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ConnectRedditResponse) Reset() {
	*x = ConnectRedditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRedditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRedditResponse) ProtoMessage() {}

func (x *ConnectRedditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRedditResponse.ProtoReflect.Descriptor instead.
func (*ConnectRedditResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{9}
}

func (x *ConnectRedditResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UpdateAutomationSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dm                   *AutomationSetting    `protobuf:"bytes,1,opt,name=dm,proto3" json:"dm,omitempty"`
	Comment              *AutomationSetting    `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	NotificationSettings *NotificationSettings `protobuf:"bytes,3,opt,name=notification_settings,json=notificationSettings,proto3" json:"notification_settings,omitempty"`
	ProjectActive        *bool                 `protobuf:"varint,4,opt,name=project_active,json=projectActive,proto3,oneof" json:"project_active,omitempty"`
}

func (x *UpdateAutomationSettingRequest) Reset() {
	*x = UpdateAutomationSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAutomationSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAutomationSettingRequest) ProtoMessage() {}

func (x *UpdateAutomationSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAutomationSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateAutomationSettingRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAutomationSettingRequest) GetDm() *AutomationSetting {
	if x != nil {
		return x.Dm
	}
	return nil
}

func (x *UpdateAutomationSettingRequest) GetComment() *AutomationSetting {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *UpdateAutomationSettingRequest) GetNotificationSettings() *NotificationSettings {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

func (x *UpdateAutomationSettingRequest) GetProjectActive() bool {
	if x != nil && x.ProjectActive != nil {
		return *x.ProjectActive
	}
	return false
}

type CreateKeywordsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords []*v1.Keyword `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *CreateKeywordsRes) Reset() {
	*x = CreateKeywordsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeywordsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeywordsRes) ProtoMessage() {}

func (x *CreateKeywordsRes) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeywordsRes.ProtoReflect.Descriptor instead.
func (*CreateKeywordsRes) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{11}
}

func (x *CreateKeywordsRes) GetKeywords() []*v1.Keyword {
	if x != nil {
		return x.Keywords
	}
	return nil
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Website       string `protobuf:"bytes,4,opt,name=website,proto3" json:"website,omitempty"`
	TargetPersona string `protobuf:"bytes,5,opt,name=target_persona,json=targetPersona,proto3" json:"target_persona,omitempty"`
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{12}
}

func (x *CreateProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectRequest) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *CreateProjectRequest) GetTargetPersona() string {
	if x != nil {
		return x.TargetPersona
	}
	return ""
}

type UpdateLeadInteractionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        v1.LeadInteractionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=doota.core.v1.LeadInteractionStatus" json:"status,omitempty"`
	InteractionId string                   `protobuf:"bytes,2,opt,name=interaction_id,json=interactionId,proto3" json:"interaction_id,omitempty"`
}

func (x *UpdateLeadInteractionStatusRequest) Reset() {
	*x = UpdateLeadInteractionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeadInteractionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadInteractionStatusRequest) ProtoMessage() {}

func (x *UpdateLeadInteractionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadInteractionStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeadInteractionStatusRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateLeadInteractionStatusRequest) GetStatus() v1.LeadInteractionStatus {
	if x != nil {
		return x.Status
	}
	return v1.LeadInteractionStatus(0)
}

func (x *UpdateLeadInteractionStatusRequest) GetInteractionId() string {
	if x != nil {
		return x.InteractionId
	}
	return ""
}

type UpdateLeadStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status v1.LeadStatus `protobuf:"varint,1,opt,name=status,proto3,enum=doota.core.v1.LeadStatus" json:"status,omitempty"`
	LeadId string        `protobuf:"bytes,2,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
}

func (x *UpdateLeadStatusRequest) Reset() {
	*x = UpdateLeadStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeadStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadStatusRequest) ProtoMessage() {}

func (x *UpdateLeadStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeadStatusRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateLeadStatusRequest) GetStatus() v1.LeadStatus {
	if x != nil {
		return x.Status
	}
	return v1.LeadStatus(0)
}

func (x *UpdateLeadStatusRequest) GetLeadId() string {
	if x != nil {
		return x.LeadId
	}
	return ""
}

type GetRelevantLeadsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubReddit      *string         `protobuf:"bytes,1,opt,name=sub_reddit,json=subReddit,proto3,oneof" json:"sub_reddit,omitempty"`
	RelevancyScore float32         `protobuf:"fixed32,2,opt,name=relevancy_score,json=relevancyScore,proto3" json:"relevancy_score,omitempty"`
	PageNo         int32           `protobuf:"varint,3,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	DateRange      DateRangeFilter `protobuf:"varint,4,opt,name=date_range,json=dateRange,proto3,enum=doota.portal.v1.DateRangeFilter" json:"date_range,omitempty"`
	Status         v1.LeadStatus   `protobuf:"varint,5,opt,name=status,proto3,enum=doota.core.v1.LeadStatus" json:"status,omitempty"`
	PageCount      int32           `protobuf:"varint,6,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
}

func (x *GetRelevantLeadsRequest) Reset() {
	*x = GetRelevantLeadsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelevantLeadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelevantLeadsRequest) ProtoMessage() {}

func (x *GetRelevantLeadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelevantLeadsRequest.ProtoReflect.Descriptor instead.
func (*GetRelevantLeadsRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{15}
}

func (x *GetRelevantLeadsRequest) GetSubReddit() string {
	if x != nil && x.SubReddit != nil {
		return *x.SubReddit
	}
	return ""
}

func (x *GetRelevantLeadsRequest) GetRelevancyScore() float32 {
	if x != nil {
		return x.RelevancyScore
	}
	return 0
}

func (x *GetRelevantLeadsRequest) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetRelevantLeadsRequest) GetDateRange() DateRangeFilter {
	if x != nil {
		return x.DateRange
	}
	return DateRangeFilter_DATE_RANGE_UNSPECIFIED
}

func (x *GetRelevantLeadsRequest) GetStatus() v1.LeadStatus {
	if x != nil {
		return x.Status
	}
	return v1.LeadStatus(0)
}

func (x *GetRelevantLeadsRequest) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

type GetLeadsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leads    []*v1.Lead    `protobuf:"bytes,1,rep,name=leads,proto3" json:"leads,omitempty"`
	Analysis *LeadAnalysis `protobuf:"bytes,2,opt,name=analysis,proto3" json:"analysis,omitempty"`
}

func (x *GetLeadsResponse) Reset() {
	*x = GetLeadsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadsResponse) ProtoMessage() {}

func (x *GetLeadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadsResponse.ProtoReflect.Descriptor instead.
func (*GetLeadsResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{16}
}

func (x *GetLeadsResponse) GetLeads() []*v1.Lead {
	if x != nil {
		return x.Leads
	}
	return nil
}

func (x *GetLeadsResponse) GetAnalysis() *LeadAnalysis {
	if x != nil {
		return x.Analysis
	}
	return nil
}

type LeadAnalysis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostsTracked       uint32 `protobuf:"varint,1,opt,name=posts_tracked,json=postsTracked,proto3" json:"posts_tracked,omitempty"`
	RelevantPostsFound uint32 `protobuf:"varint,2,opt,name=relevant_posts_found,json=relevantPostsFound,proto3" json:"relevant_posts_found,omitempty"`
	CommentSent        uint32 `protobuf:"varint,3,opt,name=comment_sent,json=commentSent,proto3" json:"comment_sent,omitempty"`
	CommentScheduled   uint32 `protobuf:"varint,4,opt,name=comment_scheduled,json=commentScheduled,proto3" json:"comment_scheduled,omitempty"`
	DmSent             uint32 `protobuf:"varint,5,opt,name=dm_sent,json=dmSent,proto3" json:"dm_sent,omitempty"`
	DmScheduled        uint32 `protobuf:"varint,6,opt,name=dm_scheduled,json=dmScheduled,proto3" json:"dm_scheduled,omitempty"`
}

func (x *LeadAnalysis) Reset() {
	*x = LeadAnalysis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeadAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadAnalysis) ProtoMessage() {}

func (x *LeadAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadAnalysis.ProtoReflect.Descriptor instead.
func (*LeadAnalysis) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{17}
}

func (x *LeadAnalysis) GetPostsTracked() uint32 {
	if x != nil {
		return x.PostsTracked
	}
	return 0
}

func (x *LeadAnalysis) GetRelevantPostsFound() uint32 {
	if x != nil {
		return x.RelevantPostsFound
	}
	return 0
}

func (x *LeadAnalysis) GetCommentSent() uint32 {
	if x != nil {
		return x.CommentSent
	}
	return 0
}

func (x *LeadAnalysis) GetCommentScheduled() uint32 {
	if x != nil {
		return x.CommentScheduled
	}
	return 0
}

func (x *LeadAnalysis) GetDmSent() uint32 {
	if x != nil {
		return x.DmSent
	}
	return 0
}

func (x *LeadAnalysis) GetDmScheduled() uint32 {
	if x != nil {
		return x.DmScheduled
	}
	return 0
}

type AddSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // eg. r/SAAS
}

func (x *AddSourceRequest) Reset() {
	*x = AddSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSourceRequest) ProtoMessage() {}

func (x *AddSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSourceRequest.ProtoReflect.Descriptor instead.
func (*AddSourceRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{18}
}

func (x *AddSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*v1.Source `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *GetSourceResponse) Reset() {
	*x = GetSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourceResponse) ProtoMessage() {}

func (x *GetSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourceResponse.ProtoReflect.Descriptor instead.
func (*GetSourceResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{19}
}

func (x *GetSourceResponse) GetSources() []*v1.Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

type RemoveSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveSourceRequest) Reset() {
	*x = RemoveSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSourceRequest) ProtoMessage() {}

func (x *RemoveSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSourceRequest.ProtoReflect.Descriptor instead.
func (*RemoveSourceRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateCustomerCaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName      string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName       string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Phone          string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	OrganizationId string `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	DueDate        string `protobuf:"bytes,5,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	PromptType     string `protobuf:"bytes,6,opt,name=prompt_type,json=promptType,proto3" json:"prompt_type,omitempty"`
}

func (x *CreateCustomerCaseReq) Reset() {
	*x = CreateCustomerCaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomerCaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerCaseReq) ProtoMessage() {}

func (x *CreateCustomerCaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerCaseReq.ProtoReflect.Descriptor instead.
func (*CreateCustomerCaseReq) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{21}
}

func (x *CreateCustomerCaseReq) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateCustomerCaseReq) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreateCustomerCaseReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateCustomerCaseReq) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateCustomerCaseReq) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

func (x *CreateCustomerCaseReq) GetPromptType() string {
	if x != nil {
		return x.PromptType
	}
	return ""
}

type CreateKeywordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords []string `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *CreateKeywordReq) Reset() {
	*x = CreateKeywordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeywordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeywordReq) ProtoMessage() {}

func (x *CreateKeywordReq) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeywordReq.ProtoReflect.Descriptor instead.
func (*CreateKeywordReq) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{22}
}

func (x *CreateKeywordReq) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

type BatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsvData        []byte `protobuf:"bytes,1,opt,name=csv_data,json=csvData,proto3" json:"csv_data,omitempty"`
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *BatchReq) Reset() {
	*x = BatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchReq) ProtoMessage() {}

func (x *BatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchReq.ProtoReflect.Descriptor instead.
func (*BatchReq) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{23}
}

func (x *BatchReq) GetCsvData() []byte {
	if x != nil {
		return x.CsvData
	}
	return nil
}

func (x *BatchReq) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type BatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows          int32    `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	RowsExtracted int32    `protobuf:"varint,2,opt,name=rows_extracted,json=rowsExtracted,proto3" json:"rows_extracted,omitempty"`
	RejectedRows  []string `protobuf:"bytes,3,rep,name=rejected_rows,json=rejectedRows,proto3" json:"rejected_rows,omitempty"`
}

func (x *BatchResp) Reset() {
	*x = BatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResp) ProtoMessage() {}

func (x *BatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResp.ProtoReflect.Descriptor instead.
func (*BatchResp) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{24}
}

func (x *BatchResp) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *BatchResp) GetRowsExtracted() int32 {
	if x != nil {
		return x.RowsExtracted
	}
	return 0
}

func (x *BatchResp) GetRejectedRows() []string {
	if x != nil {
		return x.RejectedRows
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth0Domain            string `protobuf:"bytes,1,opt,name=auth0_domain,json=auth0Domain,proto3" json:"auth0_domain,omitempty"`
	Auth0ClientId          string `protobuf:"bytes,2,opt,name=auth0_client_id,json=auth0ClientId,proto3" json:"auth0_client_id,omitempty"`
	Auth0Scope             string `protobuf:"bytes,3,opt,name=auth0_scope,json=auth0Scope,proto3" json:"auth0_scope,omitempty"`
	MsoftAuth0CallbackUrl  string `protobuf:"bytes,4,opt,name=msoft_auth0_callback_url,json=msoftAuth0CallbackUrl,proto3" json:"msoft_auth0_callback_url,omitempty"`
	FullStoryOrgId         string `protobuf:"bytes,5,opt,name=full_story_org_id,json=fullStoryOrgId,proto3" json:"full_story_org_id,omitempty"`
	GoogleAuth0CallbackUrl string `protobuf:"bytes,6,opt,name=google_auth0_callback_url,json=googleAuth0CallbackUrl,proto3" json:"google_auth0_callback_url,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{25}
}

func (x *Config) GetAuth0Domain() string {
	if x != nil {
		return x.Auth0Domain
	}
	return ""
}

func (x *Config) GetAuth0ClientId() string {
	if x != nil {
		return x.Auth0ClientId
	}
	return ""
}

func (x *Config) GetAuth0Scope() string {
	if x != nil {
		return x.Auth0Scope
	}
	return ""
}

func (x *Config) GetMsoftAuth0CallbackUrl() string {
	if x != nil {
		return x.MsoftAuth0CallbackUrl
	}
	return ""
}

func (x *Config) GetFullStoryOrgId() string {
	if x != nil {
		return x.FullStoryOrgId
	}
	return ""
}

func (x *Config) GetGoogleAuth0CallbackUrl() string {
	if x != nil {
		return x.GoogleAuth0CallbackUrl
	}
	return ""
}

type PasswordlessStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedirectUri string `protobuf:"bytes,1,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *PasswordlessStartRequest) Reset() {
	*x = PasswordlessStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordlessStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordlessStartRequest) ProtoMessage() {}

func (x *PasswordlessStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordlessStartRequest.ProtoReflect.Descriptor instead.
func (*PasswordlessStartRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{26}
}

func (x *PasswordlessStartRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *PasswordlessStartRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type PasswordlessStartVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *PasswordlessStartVerify) Reset() {
	*x = PasswordlessStartVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordlessStartVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordlessStartVerify) ProtoMessage() {}

func (x *PasswordlessStartVerify) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordlessStartVerify.ProtoReflect.Descriptor instead.
func (*PasswordlessStartVerify) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{27}
}

func (x *PasswordlessStartVerify) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PasswordlessStartVerify) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AuthStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedirectUri string `protobuf:"bytes,1,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
}

func (x *AuthStateRequest) Reset() {
	*x = AuthStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthStateRequest) ProtoMessage() {}

func (x *AuthStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthStateRequest.ProtoReflect.Descriptor instead.
func (*AuthStateRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{28}
}

func (x *AuthStateRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Nonce string `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{29}
}

func (x *State) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *State) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email            string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified    bool                   `protobuf:"varint,3,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Role             UserRole               `protobuf:"varint,4,opt,name=role,proto3,enum=doota.portal.v1.UserRole" json:"role,omitempty"`
	Organizations    []*Organization        `protobuf:"bytes,7,rep,name=organizations,proto3" json:"organizations,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Projects         []*v1.Project          `protobuf:"bytes,11,rep,name=projects,proto3" json:"projects,omitempty"`
	IsOnboardingDone bool                   `protobuf:"varint,12,opt,name=is_onboarding_done,json=isOnboardingDone,proto3" json:"is_onboarding_done,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{30}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetEmailVerified() bool {
	if x != nil {
		return x.EmailVerified
	}
	return false
}

func (x *User) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_USER_ROLE_UNSPECIFIED
}

func (x *User) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetProjects() []*v1.Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *User) GetIsOnboardingDone() bool {
	if x != nil {
		return x.IsOnboardingDone
	}
	return false
}

type OauthAuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationType IntegrationType `protobuf:"varint,1,opt,name=integration_type,json=integrationType,proto3,enum=doota.portal.v1.IntegrationType" json:"integration_type,omitempty"`
	RedirectUrl     string          `protobuf:"bytes,2,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *OauthAuthorizeRequest) Reset() {
	*x = OauthAuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthAuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthAuthorizeRequest) ProtoMessage() {}

func (x *OauthAuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthAuthorizeRequest.ProtoReflect.Descriptor instead.
func (*OauthAuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{31}
}

func (x *OauthAuthorizeRequest) GetIntegrationType() IntegrationType {
	if x != nil {
		return x.IntegrationType
	}
	return IntegrationType_INTEGRATION_TYPE_UNSPECIFIED
}

func (x *OauthAuthorizeRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type OauthAuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizeUrl string `protobuf:"bytes,1,opt,name=authorize_url,json=authorizeUrl,proto3" json:"authorize_url,omitempty"`
}

func (x *OauthAuthorizeResponse) Reset() {
	*x = OauthAuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthAuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthAuthorizeResponse) ProtoMessage() {}

func (x *OauthAuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthAuthorizeResponse.ProtoReflect.Descriptor instead.
func (*OauthAuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{32}
}

func (x *OauthAuthorizeResponse) GetAuthorizeUrl() string {
	if x != nil {
		return x.AuthorizeUrl
	}
	return ""
}

type IssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *IssueRequest) Reset() {
	*x = IssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueRequest) ProtoMessage() {}

func (x *IssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueRequest.ProtoReflect.Descriptor instead.
func (*IssueRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{33}
}

func (x *IssueRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *IssueRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type JWT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt int64  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *JWT) Reset() {
	*x = JWT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWT) ProtoMessage() {}

func (x *JWT) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWT.ProtoReflect.Descriptor instead.
func (*JWT) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{34}
}

func (x *JWT) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JWT) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FeatureFlags *OrganizationFeatureFlags `protobuf:"bytes,3,opt,name=feature_flags,json=featureFlags,proto3" json:"feature_flags,omitempty"`
	CreatedAt    *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{35}
}

func (x *Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organization) GetFeatureFlags() *OrganizationFeatureFlags {
	if x != nil {
		return x.FeatureFlags
	}
	return nil
}

func (x *Organization) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type OrganizationFeatureFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscription         *v1.Subscription      `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	DM                   *AutomationSetting    `protobuf:"bytes,2,opt,name=DM,proto3" json:"DM,omitempty"`
	Comment              *AutomationSetting    `protobuf:"bytes,3,opt,name=Comment,proto3" json:"Comment,omitempty"`
	NotificationSettings *NotificationSettings `protobuf:"bytes,4,opt,name=notification_settings,json=notificationSettings,proto3" json:"notification_settings,omitempty"`
}

func (x *OrganizationFeatureFlags) Reset() {
	*x = OrganizationFeatureFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationFeatureFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationFeatureFlags) ProtoMessage() {}

func (x *OrganizationFeatureFlags) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationFeatureFlags.ProtoReflect.Descriptor instead.
func (*OrganizationFeatureFlags) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{36}
}

func (x *OrganizationFeatureFlags) GetSubscription() *v1.Subscription {
	if x != nil {
		return x.Subscription
	}
	return nil
}

func (x *OrganizationFeatureFlags) GetDM() *AutomationSetting {
	if x != nil {
		return x.DM
	}
	return nil
}

func (x *OrganizationFeatureFlags) GetComment() *AutomationSetting {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *OrganizationFeatureFlags) GetNotificationSettings() *NotificationSettings {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

type NotificationSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelevantPostFrequency NotificationFrequency `protobuf:"varint,1,opt,name=relevant_post_frequency,json=relevantPostFrequency,proto3,enum=doota.portal.v1.NotificationFrequency" json:"relevant_post_frequency,omitempty"`
}

func (x *NotificationSettings) Reset() {
	*x = NotificationSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettings) ProtoMessage() {}

func (x *NotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettings.ProtoReflect.Descriptor instead.
func (*NotificationSettings) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{37}
}

func (x *NotificationSettings) GetRelevantPostFrequency() NotificationFrequency {
	if x != nil {
		return x.RelevantPostFrequency
	}
	return NotificationFrequency_NOTIFICATION_FREQUENCY_NONE
}

type AutomationSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled        bool    `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	RelevancyScore float32 `protobuf:"fixed32,2,opt,name=relevancy_score,json=relevancyScore,proto3" json:"relevancy_score,omitempty"`
	MaxPerDay      int64   `protobuf:"varint,3,opt,name=max_per_day,json=maxPerDay,proto3" json:"max_per_day,omitempty"`
}

func (x *AutomationSetting) Reset() {
	*x = AutomationSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomationSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomationSetting) ProtoMessage() {}

func (x *AutomationSetting) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomationSetting.ProtoReflect.Descriptor instead.
func (*AutomationSetting) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{38}
}

func (x *AutomationSetting) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AutomationSetting) GetRelevancyScore() float32 {
	if x != nil {
		return x.RelevancyScore
	}
	return 0
}

func (x *AutomationSetting) GetMaxPerDay() int64 {
	if x != nil {
		return x.MaxPerDay
	}
	return 0
}

type Integration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId string           `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Type           IntegrationType  `protobuf:"varint,3,opt,name=type,proto3,enum=doota.portal.v1.IntegrationType" json:"type,omitempty"`
	Status         IntegrationState `protobuf:"varint,4,opt,name=status,proto3,enum=doota.portal.v1.IntegrationState" json:"status,omitempty"`
	// Types that are assignable to Details:
	//
	//	*Integration_Reddit
	Details isIntegration_Details `protobuf_oneof:"details"`
}

func (x *Integration) Reset() {
	*x = Integration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration) ProtoMessage() {}

func (x *Integration) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration.ProtoReflect.Descriptor instead.
func (*Integration) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{39}
}

func (x *Integration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Integration) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Integration) GetType() IntegrationType {
	if x != nil {
		return x.Type
	}
	return IntegrationType_INTEGRATION_TYPE_UNSPECIFIED
}

func (x *Integration) GetStatus() IntegrationState {
	if x != nil {
		return x.Status
	}
	return IntegrationState_INTEGRATION_STATE_UNSPECIFIED
}

func (m *Integration) GetDetails() isIntegration_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *Integration) GetReddit() *RedditIntegration {
	if x, ok := x.GetDetails().(*Integration_Reddit); ok {
		return x.Reddit
	}
	return nil
}

type isIntegration_Details interface {
	isIntegration_Details()
}

type Integration_Reddit struct {
	Reddit *RedditIntegration `protobuf:"bytes,6,opt,name=reddit,proto3,oneof"`
}

func (*Integration_Reddit) isIntegration_Details() {}

type RedditIntegration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Reason   string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RedditIntegration) Reset() {
	*x = RedditIntegration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedditIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedditIntegration) ProtoMessage() {}

func (x *RedditIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedditIntegration.ProtoReflect.Descriptor instead.
func (*RedditIntegration) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{40}
}

func (x *RedditIntegration) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RedditIntegration) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type Integrations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations []*Integration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
}

func (x *Integrations) Reset() {
	*x = Integrations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integrations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integrations) ProtoMessage() {}

func (x *Integrations) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integrations.ProtoReflect.Descriptor instead.
func (*Integrations) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{41}
}

func (x *Integrations) GetIntegrations() []*Integration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type RevokeIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RevokeIntegrationRequest) Reset() {
	*x = RevokeIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeIntegrationRequest) ProtoMessage() {}

func (x *RevokeIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeIntegrationRequest.ProtoReflect.Descriptor instead.
func (*RevokeIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{42}
}

func (x *RevokeIntegrationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type IntegrationType `protobuf:"varint,1,opt,name=type,proto3,enum=doota.portal.v1.IntegrationType" json:"type,omitempty"`
}

func (x *GetIntegrationRequest) Reset() {
	*x = GetIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationRequest) ProtoMessage() {}

func (x *GetIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationRequest.ProtoReflect.Descriptor instead.
func (*GetIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{43}
}

func (x *GetIntegrationRequest) GetType() IntegrationType {
	if x != nil {
		return x.Type
	}
	return IntegrationType_INTEGRATION_TYPE_UNSPECIFIED
}

type AddUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email           string                `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	MessageSource   *MessageSourceOptions `protobuf:"bytes,2,opt,name=message_source,json=messageSource,proto3,oneof" json:"message_source,omitempty"`
	IntegrationType IntegrationType       `protobuf:"varint,3,opt,name=integration_type,json=integrationType,proto3,enum=doota.portal.v1.IntegrationType" json:"integration_type,omitempty"`
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{44}
}

func (x *AddUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddUserRequest) GetMessageSource() *MessageSourceOptions {
	if x != nil {
		return x.MessageSource
	}
	return nil
}

func (x *AddUserRequest) GetIntegrationType() IntegrationType {
	if x != nil {
		return x.IntegrationType
	}
	return IntegrationType_INTEGRATION_TYPE_UNSPECIFIED
}

type RenewUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSourceId string `protobuf:"bytes,1,opt,name=message_source_id,json=messageSourceId,proto3" json:"message_source_id,omitempty"`
}

func (x *RenewUserRequest) Reset() {
	*x = RenewUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewUserRequest) ProtoMessage() {}

func (x *RenewUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewUserRequest.ProtoReflect.Descriptor instead.
func (*RenewUserRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{45}
}

func (x *RenewUserRequest) GetMessageSourceId() string {
	if x != nil {
		return x.MessageSourceId
	}
	return ""
}

type MessageSourceOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId         string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	IntegrationExternalId string `protobuf:"bytes,2,opt,name=integration_external_id,json=integrationExternalId,proto3" json:"integration_external_id,omitempty"`
}

func (x *MessageSourceOptions) Reset() {
	*x = MessageSourceOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSourceOptions) ProtoMessage() {}

func (x *MessageSourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSourceOptions.ProtoReflect.Descriptor instead.
func (*MessageSourceOptions) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{46}
}

func (x *MessageSourceOptions) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *MessageSourceOptions) GetIntegrationExternalId() string {
	if x != nil {
		return x.IntegrationExternalId
	}
	return ""
}

type OauthCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State        string  `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	ExternalCode *string `protobuf:"bytes,2,opt,name=external_code,json=externalCode,proto3,oneof" json:"external_code,omitempty"`
}

func (x *OauthCallbackRequest) Reset() {
	*x = OauthCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthCallbackRequest) ProtoMessage() {}

func (x *OauthCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthCallbackRequest.ProtoReflect.Descriptor instead.
func (*OauthCallbackRequest) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{47}
}

func (x *OauthCallbackRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OauthCallbackRequest) GetExternalCode() string {
	if x != nil && x.ExternalCode != nil {
		return *x.ExternalCode
	}
	return ""
}

type OauthCallbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedirectUrl string `protobuf:"bytes,1,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *OauthCallbackResponse) Reset() {
	*x = OauthCallbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doota_portal_v1_portal_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthCallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthCallbackResponse) ProtoMessage() {}

func (x *OauthCallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doota_portal_v1_portal_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthCallbackResponse.ProtoReflect.Descriptor instead.
func (*OauthCallbackResponse) Descriptor() ([]byte, []int) {
	return file_doota_portal_v1_portal_proto_rawDescGZIP(), []int{48}
}

func (x *OauthCallbackResponse) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

var File_doota_portal_v1_portal_proto protoreflect.FileDescriptor

var file_doota_portal_v1_portal_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x64,
	0x6f, 0x6f, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x70, 0x6f,
	0x73, 0x74, 0x73, 0x22, 0x4a, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6f, 0x74,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22,
	0x53, 0x0a, 0x1a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x64, 0x6f,
	0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x52, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x22, 0x77, 0x0a, 0x1b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x44, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x41, 0x0a,
	0x1c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x22, 0x3c, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x9b,
	0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x37, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x64, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x64, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0xad, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x02, 0x64, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x64, 0x6d, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f,
	0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x6f,
	0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x9d, 0x01, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x22, 0x89, 0x01, 0x0a,
	0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22,
	0xa1, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x4c,
	0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x64, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x52, 0x65, 0x64, 0x64, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x6e, 0x63, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x64,
	0x64, 0x69, 0x74, 0x22, 0x78, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x05, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x52, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0xf1, 0x01,
	0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6d, 0x5f, 0x73, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6d, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22,
	0x25, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x08, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x73, 0x76, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x73, 0x76, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27,
	0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x09, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x77, 0x73,
	0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x6f, 0x77, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x30, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x30, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x30, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x30, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75,
	0x74, 0x68, 0x30, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x30, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6d,
	0x73, 0x6f, 0x66, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x30, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d,
	0x73, 0x6f, 0x66, 0x74, 0x41, 0x75, 0x74, 0x68, 0x30, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x30, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x30, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0x53, 0x0a, 0x18, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x43, 0x0a, 0x17, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x22, 0x33, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x22, 0xe4, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f,
	0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4b, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x6f,
	0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72,
	0x6c, 0x22, 0x3d, 0x0a, 0x16, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x55, 0x72, 0x6c,
	0x22, 0x38, 0x0a, 0x0c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x03, 0x4a, 0x57,
	0x54, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x0c, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x02, 0x0a, 0x18, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x6f, 0x74,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x02, 0x44, 0x4d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x44, 0x4d, 0x12, 0x3c, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x6f, 0x74,
	0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x76, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5e, 0x0a, 0x17, 0x72, 0x65,
	0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x64, 0x6f,
	0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x15, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x76, 0x0a, 0x11, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c,
	0x65, 0x76, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x44,
	0x61, 0x79, 0x22, 0x80, 0x02, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x6f, 0x74,
	0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x06,
	0x72, 0x65, 0x64, 0x64, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64,
	0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x64, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x64, 0x64, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x48, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x64, 0x69, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x50, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x40, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd9, 0x01, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x51, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22,
	0x68, 0x0a, 0x14, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x15, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x2a, 0x74, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x54, 0x4f, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x59, 0x45, 0x53, 0x54, 0x45, 0x52, 0x44,
	0x41, 0x59, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x37, 0x5f, 0x44, 0x41, 0x59, 0x53, 0x10, 0x03, 0x2a, 0x60, 0x0a, 0x12, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x20, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f,
	0x52, 0x49, 0x5a, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x4f, 0x41, 0x55, 0x54, 0x48,
	0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x2a, 0x6c, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x1c, 0x0a,
	0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46,
	0x4f, 0x52, 0x4d, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03, 0x2a, 0x7d, 0x0a, 0x15, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x59, 0x5f,
	0x44, 0x41, 0x49, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43,
	0x59, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x4c, 0x59, 0x10, 0x02, 0x2a, 0xb3, 0x01, 0x0a, 0x0f, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x1c, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x4f, 0x46, 0x54, 0x10, 0x01,
	0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x44, 0x44, 0x49, 0x54, 0x10, 0x03, 0x12, 0x24, 0x0a, 0x20, 0x49, 0x4e,
	0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x44, 0x44, 0x49, 0x54, 0x5f, 0x44, 0x4d, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x04,
	0x2a, 0xeb, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x54, 0x45,
	0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x48,
	0x5f, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x49, 0x4e,
	0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x45, 0x58,
	0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x49, 0x4e, 0x54, 0x45, 0x47,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x45, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x05, 0x32, 0xf6,
	0x15, 0x0a, 0x0d, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35,
	0x0a, 0x04, 0x53, 0x65, 0x6c, 0x66, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15,
	0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56,
	0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x19, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x64, 0x6f, 0x6f,
	0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x64,
	0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x11,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x29, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x12, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x28, 0x2e, 0x64, 0x6f, 0x6f,
	0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x1a, 0x14, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x57, 0x54, 0x12, 0x61, 0x0a, 0x0e, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x2e, 0x64,
	0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x0d, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x25,
	0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x13, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x25, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x6f,
	0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x57,
	0x54, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x64,
	0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x21, 0x2e,
	0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x6e, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x73, 0x12, 0x28, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x76, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6a, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x2e, 0x64, 0x6f, 0x6f, 0x74,
	0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e,
	0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4b, 0x0a, 0x19,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x41,
	0x6e, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x6a, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2f, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x64, 0x64, 0x69, 0x74, 0x12, 0x25, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x64, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x64, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b,
	0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x6f,
	0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d,
	0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a,
	0x13, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49,
	0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x64,
	0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x21, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x13,
	0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x64, 0x6f, 0x6f, 0x74, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x6f, 0x6f,
	0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x12,
	0x46, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x61, 0x6e, 0x6b, 0x33, 0x31, 0x38, 0x2f, 0x64,
	0x6f, 0x6f, 0x74, 0x61, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x6f, 0x6f, 0x74, 0x61, 0x2f, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_doota_portal_v1_portal_proto_rawDescOnce sync.Once
	file_doota_portal_v1_portal_proto_rawDescData = file_doota_portal_v1_portal_proto_rawDesc
)

func file_doota_portal_v1_portal_proto_rawDescGZIP() []byte {
	file_doota_portal_v1_portal_proto_rawDescOnce.Do(func() {
		file_doota_portal_v1_portal_proto_rawDescData = protoimpl.X.CompressGZIP(file_doota_portal_v1_portal_proto_rawDescData)
	})
	return file_doota_portal_v1_portal_proto_rawDescData
}

var file_doota_portal_v1_portal_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_doota_portal_v1_portal_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_doota_portal_v1_portal_proto_goTypes = []interface{}{
	(DateRangeFilter)(0),                       // 0: doota.portal.v1.DateRangeFilter
	(OauthAuthorizeType)(0),                    // 1: doota.portal.v1.OauthAuthorizeType
	(UserRole)(0),                              // 2: doota.portal.v1.UserRole
	(NotificationFrequency)(0),                 // 3: doota.portal.v1.NotificationFrequency
	(IntegrationType)(0),                       // 4: doota.portal.v1.IntegrationType
	(IntegrationState)(0),                      // 5: doota.portal.v1.IntegrationState
	(*GetPostsResponse)(nil),                   // 6: doota.portal.v1.GetPostsResponse
	(*InsightsResponse)(nil),                   // 7: doota.portal.v1.InsightsResponse
	(*UpgradeSubscriptionRequest)(nil),         // 8: doota.portal.v1.UpgradeSubscriptionRequest
	(*InitiateSubscriptionRequest)(nil),        // 9: doota.portal.v1.InitiateSubscriptionRequest
	(*InitiateSubscriptionResponse)(nil),       // 10: doota.portal.v1.InitiateSubscriptionResponse
	(*VerifySubscriptionRequest)(nil),          // 11: doota.portal.v1.VerifySubscriptionRequest
	(*GetLeadInteractionsRequest)(nil),         // 12: doota.portal.v1.GetLeadInteractionsRequest
	(*GetLeadInteractionsResponse)(nil),        // 13: doota.portal.v1.GetLeadInteractionsResponse
	(*ConnectRedditRequest)(nil),               // 14: doota.portal.v1.ConnectRedditRequest
	(*ConnectRedditResponse)(nil),              // 15: doota.portal.v1.ConnectRedditResponse
	(*UpdateAutomationSettingRequest)(nil),     // 16: doota.portal.v1.UpdateAutomationSettingRequest
	(*CreateKeywordsRes)(nil),                  // 17: doota.portal.v1.CreateKeywordsRes
	(*CreateProjectRequest)(nil),               // 18: doota.portal.v1.CreateProjectRequest
	(*UpdateLeadInteractionStatusRequest)(nil), // 19: doota.portal.v1.UpdateLeadInteractionStatusRequest
	(*UpdateLeadStatusRequest)(nil),            // 20: doota.portal.v1.UpdateLeadStatusRequest
	(*GetRelevantLeadsRequest)(nil),            // 21: doota.portal.v1.GetRelevantLeadsRequest
	(*GetLeadsResponse)(nil),                   // 22: doota.portal.v1.GetLeadsResponse
	(*LeadAnalysis)(nil),                       // 23: doota.portal.v1.LeadAnalysis
	(*AddSourceRequest)(nil),                   // 24: doota.portal.v1.AddSourceRequest
	(*GetSourceResponse)(nil),                  // 25: doota.portal.v1.GetSourceResponse
	(*RemoveSourceRequest)(nil),                // 26: doota.portal.v1.RemoveSourceRequest
	(*CreateCustomerCaseReq)(nil),              // 27: doota.portal.v1.CreateCustomerCaseReq
	(*CreateKeywordReq)(nil),                   // 28: doota.portal.v1.CreateKeywordReq
	(*BatchReq)(nil),                           // 29: doota.portal.v1.BatchReq
	(*BatchResp)(nil),                          // 30: doota.portal.v1.BatchResp
	(*Config)(nil),                             // 31: doota.portal.v1.Config
	(*PasswordlessStartRequest)(nil),           // 32: doota.portal.v1.PasswordlessStartRequest
	(*PasswordlessStartVerify)(nil),            // 33: doota.portal.v1.PasswordlessStartVerify
	(*AuthStateRequest)(nil),                   // 34: doota.portal.v1.AuthStateRequest
	(*State)(nil),                              // 35: doota.portal.v1.State
	(*User)(nil),                               // 36: doota.portal.v1.User
	(*OauthAuthorizeRequest)(nil),              // 37: doota.portal.v1.OauthAuthorizeRequest
	(*OauthAuthorizeResponse)(nil),             // 38: doota.portal.v1.OauthAuthorizeResponse
	(*IssueRequest)(nil),                       // 39: doota.portal.v1.IssueRequest
	(*JWT)(nil),                                // 40: doota.portal.v1.JWT
	(*Organization)(nil),                       // 41: doota.portal.v1.Organization
	(*OrganizationFeatureFlags)(nil),           // 42: doota.portal.v1.OrganizationFeatureFlags
	(*NotificationSettings)(nil),               // 43: doota.portal.v1.NotificationSettings
	(*AutomationSetting)(nil),                  // 44: doota.portal.v1.AutomationSetting
	(*Integration)(nil),                        // 45: doota.portal.v1.Integration
	(*RedditIntegration)(nil),                  // 46: doota.portal.v1.RedditIntegration
	(*Integrations)(nil),                       // 47: doota.portal.v1.Integrations
	(*RevokeIntegrationRequest)(nil),           // 48: doota.portal.v1.RevokeIntegrationRequest
	(*GetIntegrationRequest)(nil),              // 49: doota.portal.v1.GetIntegrationRequest
	(*AddUserRequest)(nil),                     // 50: doota.portal.v1.AddUserRequest
	(*RenewUserRequest)(nil),                   // 51: doota.portal.v1.RenewUserRequest
	(*MessageSourceOptions)(nil),               // 52: doota.portal.v1.MessageSourceOptions
	(*OauthCallbackRequest)(nil),               // 53: doota.portal.v1.OauthCallbackRequest
	(*OauthCallbackResponse)(nil),              // 54: doota.portal.v1.OauthCallbackResponse
	(*v1.PostDetail)(nil),                      // 55: doota.core.v1.PostDetail
	(*v1.PostInsight)(nil),                     // 56: doota.core.v1.PostInsight
	(v1.SubscriptionPlanID)(0),                 // 57: doota.core.v1.SubscriptionPlanID
	(v1.LeadInteractionStatus)(0),              // 58: doota.core.v1.LeadInteractionStatus
	(*v1.LeadInteraction)(nil),                 // 59: doota.core.v1.LeadInteraction
	(*v1.Keyword)(nil),                         // 60: doota.core.v1.Keyword
	(v1.LeadStatus)(0),                         // 61: doota.core.v1.LeadStatus
	(*v1.Lead)(nil),                            // 62: doota.core.v1.Lead
	(*v1.Source)(nil),                          // 63: doota.core.v1.Source
	(*timestamppb.Timestamp)(nil),              // 64: google.protobuf.Timestamp
	(*v1.Project)(nil),                         // 65: doota.core.v1.Project
	(*v1.Subscription)(nil),                    // 66: doota.core.v1.Subscription
	(*emptypb.Empty)(nil),                      // 67: google.protobuf.Empty
	(*v1.PostSettings)(nil),                    // 68: doota.core.v1.PostSettings
	(*v1.UpdatePostRequest)(nil),               // 69: doota.core.v1.UpdatePostRequest
	(*v1.DeletePostRequest)(nil),               // 70: doota.core.v1.DeletePostRequest
	(*v1.Post)(nil),                            // 71: doota.core.v1.Post
}
var file_doota_portal_v1_portal_proto_depIdxs = []int32{
	55, // 0: doota.portal.v1.GetPostsResponse.posts:type_name -> doota.core.v1.PostDetail
	56, // 1: doota.portal.v1.InsightsResponse.insights:type_name -> doota.core.v1.PostInsight
	57, // 2: doota.portal.v1.UpgradeSubscriptionRequest.plan:type_name -> doota.core.v1.SubscriptionPlanID
	57, // 3: doota.portal.v1.InitiateSubscriptionRequest.plan:type_name -> doota.core.v1.SubscriptionPlanID
	0,  // 4: doota.portal.v1.GetLeadInteractionsRequest.date_range:type_name -> doota.portal.v1.DateRangeFilter
	58, // 5: doota.portal.v1.GetLeadInteractionsRequest.status:type_name -> doota.core.v1.LeadInteractionStatus
	59, // 6: doota.portal.v1.GetLeadInteractionsResponse.interactions:type_name -> doota.core.v1.LeadInteraction
	44, // 7: doota.portal.v1.UpdateAutomationSettingRequest.dm:type_name -> doota.portal.v1.AutomationSetting
	44, // 8: doota.portal.v1.UpdateAutomationSettingRequest.comment:type_name -> doota.portal.v1.AutomationSetting
	43, // 9: doota.portal.v1.UpdateAutomationSettingRequest.notification_settings:type_name -> doota.portal.v1.NotificationSettings
	60, // 10: doota.portal.v1.CreateKeywordsRes.keywords:type_name -> doota.core.v1.Keyword
	58, // 11: doota.portal.v1.UpdateLeadInteractionStatusRequest.status:type_name -> doota.core.v1.LeadInteractionStatus
	61, // 12: doota.portal.v1.UpdateLeadStatusRequest.status:type_name -> doota.core.v1.LeadStatus
	0,  // 13: doota.portal.v1.GetRelevantLeadsRequest.date_range:type_name -> doota.portal.v1.DateRangeFilter
	61, // 14: doota.portal.v1.GetRelevantLeadsRequest.status:type_name -> doota.core.v1.LeadStatus
	62, // 15: doota.portal.v1.GetLeadsResponse.leads:type_name -> doota.core.v1.Lead
	23, // 16: doota.portal.v1.GetLeadsResponse.analysis:type_name -> doota.portal.v1.LeadAnalysis
	63, // 17: doota.portal.v1.GetSourceResponse.sources:type_name -> doota.core.v1.Source
	2,  // 18: doota.portal.v1.User.role:type_name -> doota.portal.v1.UserRole
	41, // 19: doota.portal.v1.User.organizations:type_name -> doota.portal.v1.Organization
	64, // 20: doota.portal.v1.User.created_at:type_name -> google.protobuf.Timestamp
	65, // 21: doota.portal.v1.User.projects:type_name -> doota.core.v1.Project
	4,  // 22: doota.portal.v1.OauthAuthorizeRequest.integration_type:type_name -> doota.portal.v1.IntegrationType
	42, // 23: doota.portal.v1.Organization.feature_flags:type_name -> doota.portal.v1.OrganizationFeatureFlags
	64, // 24: doota.portal.v1.Organization.created_at:type_name -> google.protobuf.Timestamp
	66, // 25: doota.portal.v1.OrganizationFeatureFlags.subscription:type_name -> doota.core.v1.Subscription
	44, // 26: doota.portal.v1.OrganizationFeatureFlags.DM:type_name -> doota.portal.v1.AutomationSetting
	44, // 27: doota.portal.v1.OrganizationFeatureFlags.Comment:type_name -> doota.portal.v1.AutomationSetting
	43, // 28: doota.portal.v1.OrganizationFeatureFlags.notification_settings:type_name -> doota.portal.v1.NotificationSettings
	3,  // 29: doota.portal.v1.NotificationSettings.relevant_post_frequency:type_name -> doota.portal.v1.NotificationFrequency
	4,  // 30: doota.portal.v1.Integration.type:type_name -> doota.portal.v1.IntegrationType
	5,  // 31: doota.portal.v1.Integration.status:type_name -> doota.portal.v1.IntegrationState
	46, // 32: doota.portal.v1.Integration.reddit:type_name -> doota.portal.v1.RedditIntegration
	45, // 33: doota.portal.v1.Integrations.integrations:type_name -> doota.portal.v1.Integration
	4,  // 34: doota.portal.v1.GetIntegrationRequest.type:type_name -> doota.portal.v1.IntegrationType
	52, // 35: doota.portal.v1.AddUserRequest.message_source:type_name -> doota.portal.v1.MessageSourceOptions
	4,  // 36: doota.portal.v1.AddUserRequest.integration_type:type_name -> doota.portal.v1.IntegrationType
	67, // 37: doota.portal.v1.PortalService.GetConfig:input_type -> google.protobuf.Empty
	67, // 38: doota.portal.v1.PortalService.Self:input_type -> google.protobuf.Empty
	49, // 39: doota.portal.v1.PortalService.GetIntegration:input_type -> doota.portal.v1.GetIntegrationRequest
	48, // 40: doota.portal.v1.PortalService.RevokeIntegration:input_type -> doota.portal.v1.RevokeIntegrationRequest
	29, // 41: doota.portal.v1.PortalService.Batch:input_type -> doota.portal.v1.BatchReq
	27, // 42: doota.portal.v1.PortalService.CreateCustomerCase:input_type -> doota.portal.v1.CreateCustomerCaseReq
	32, // 43: doota.portal.v1.PortalService.PasswordlessStart:input_type -> doota.portal.v1.PasswordlessStartRequest
	33, // 44: doota.portal.v1.PortalService.PasswordlessVerify:input_type -> doota.portal.v1.PasswordlessStartVerify
	37, // 45: doota.portal.v1.PortalService.OauthAuthorize:input_type -> doota.portal.v1.OauthAuthorizeRequest
	53, // 46: doota.portal.v1.PortalService.OauthCallback:input_type -> doota.portal.v1.OauthCallbackRequest
	53, // 47: doota.portal.v1.PortalService.SocialLoginCallback:input_type -> doota.portal.v1.OauthCallbackRequest
	67, // 48: doota.portal.v1.PortalService.GetIntegrations:input_type -> google.protobuf.Empty
	28, // 49: doota.portal.v1.PortalService.CreateKeywords:input_type -> doota.portal.v1.CreateKeywordReq
	24, // 50: doota.portal.v1.PortalService.AddSource:input_type -> doota.portal.v1.AddSourceRequest
	67, // 51: doota.portal.v1.PortalService.GetSources:input_type -> google.protobuf.Empty
	26, // 52: doota.portal.v1.PortalService.RemoveSource:input_type -> doota.portal.v1.RemoveSourceRequest
	21, // 53: doota.portal.v1.PortalService.GetRelevantLeads:input_type -> doota.portal.v1.GetRelevantLeadsRequest
	20, // 54: doota.portal.v1.PortalService.UpdateLeadStatus:input_type -> doota.portal.v1.UpdateLeadStatusRequest
	19, // 55: doota.portal.v1.PortalService.UpdateLeadInteractionStatus:input_type -> doota.portal.v1.UpdateLeadInteractionStatusRequest
	18, // 56: doota.portal.v1.PortalService.CreateOrEditProject:input_type -> doota.portal.v1.CreateProjectRequest
	67, // 57: doota.portal.v1.PortalService.SuggestKeywordsAndSources:input_type -> google.protobuf.Empty
	16, // 58: doota.portal.v1.PortalService.UpdateAutomationSettings:input_type -> doota.portal.v1.UpdateAutomationSettingRequest
	14, // 59: doota.portal.v1.PortalService.ConnectReddit:input_type -> doota.portal.v1.ConnectRedditRequest
	12, // 60: doota.portal.v1.PortalService.GetLeadInteractions:input_type -> doota.portal.v1.GetLeadInteractionsRequest
	9,  // 61: doota.portal.v1.PortalService.InitiateSubscription:input_type -> doota.portal.v1.InitiateSubscriptionRequest
	11, // 62: doota.portal.v1.PortalService.VerifySubscription:input_type -> doota.portal.v1.VerifySubscriptionRequest
	8,  // 63: doota.portal.v1.PortalService.UpgradeSubscription:input_type -> doota.portal.v1.UpgradeSubscriptionRequest
	67, // 64: doota.portal.v1.PortalService.CancelSubscription:input_type -> google.protobuf.Empty
	67, // 65: doota.portal.v1.PortalService.GetInsights:input_type -> google.protobuf.Empty
	68, // 66: doota.portal.v1.PortalService.CreatePost:input_type -> doota.core.v1.PostSettings
	67, // 67: doota.portal.v1.PortalService.GetPosts:input_type -> google.protobuf.Empty
	69, // 68: doota.portal.v1.PortalService.UpdatePost:input_type -> doota.core.v1.UpdatePostRequest
	70, // 69: doota.portal.v1.PortalService.DeletePost:input_type -> doota.core.v1.DeletePostRequest
	31, // 70: doota.portal.v1.PortalService.GetConfig:output_type -> doota.portal.v1.Config
	36, // 71: doota.portal.v1.PortalService.Self:output_type -> doota.portal.v1.User
	47, // 72: doota.portal.v1.PortalService.GetIntegration:output_type -> doota.portal.v1.Integrations
	67, // 73: doota.portal.v1.PortalService.RevokeIntegration:output_type -> google.protobuf.Empty
	30, // 74: doota.portal.v1.PortalService.Batch:output_type -> doota.portal.v1.BatchResp
	67, // 75: doota.portal.v1.PortalService.CreateCustomerCase:output_type -> google.protobuf.Empty
	67, // 76: doota.portal.v1.PortalService.PasswordlessStart:output_type -> google.protobuf.Empty
	40, // 77: doota.portal.v1.PortalService.PasswordlessVerify:output_type -> doota.portal.v1.JWT
	38, // 78: doota.portal.v1.PortalService.OauthAuthorize:output_type -> doota.portal.v1.OauthAuthorizeResponse
	54, // 79: doota.portal.v1.PortalService.OauthCallback:output_type -> doota.portal.v1.OauthCallbackResponse
	40, // 80: doota.portal.v1.PortalService.SocialLoginCallback:output_type -> doota.portal.v1.JWT
	47, // 81: doota.portal.v1.PortalService.GetIntegrations:output_type -> doota.portal.v1.Integrations
	17, // 82: doota.portal.v1.PortalService.CreateKeywords:output_type -> doota.portal.v1.CreateKeywordsRes
	63, // 83: doota.portal.v1.PortalService.AddSource:output_type -> doota.core.v1.Source
	25, // 84: doota.portal.v1.PortalService.GetSources:output_type -> doota.portal.v1.GetSourceResponse
	67, // 85: doota.portal.v1.PortalService.RemoveSource:output_type -> google.protobuf.Empty
	22, // 86: doota.portal.v1.PortalService.GetRelevantLeads:output_type -> doota.portal.v1.GetLeadsResponse
	67, // 87: doota.portal.v1.PortalService.UpdateLeadStatus:output_type -> google.protobuf.Empty
	67, // 88: doota.portal.v1.PortalService.UpdateLeadInteractionStatus:output_type -> google.protobuf.Empty
	65, // 89: doota.portal.v1.PortalService.CreateOrEditProject:output_type -> doota.core.v1.Project
	65, // 90: doota.portal.v1.PortalService.SuggestKeywordsAndSources:output_type -> doota.core.v1.Project
	41, // 91: doota.portal.v1.PortalService.UpdateAutomationSettings:output_type -> doota.portal.v1.Organization
	15, // 92: doota.portal.v1.PortalService.ConnectReddit:output_type -> doota.portal.v1.ConnectRedditResponse
	13, // 93: doota.portal.v1.PortalService.GetLeadInteractions:output_type -> doota.portal.v1.GetLeadInteractionsResponse
	10, // 94: doota.portal.v1.PortalService.InitiateSubscription:output_type -> doota.portal.v1.InitiateSubscriptionResponse
	66, // 95: doota.portal.v1.PortalService.VerifySubscription:output_type -> doota.core.v1.Subscription
	66, // 96: doota.portal.v1.PortalService.UpgradeSubscription:output_type -> doota.core.v1.Subscription
	66, // 97: doota.portal.v1.PortalService.CancelSubscription:output_type -> doota.core.v1.Subscription
	7,  // 98: doota.portal.v1.PortalService.GetInsights:output_type -> doota.portal.v1.InsightsResponse
	71, // 99: doota.portal.v1.PortalService.CreatePost:output_type -> doota.core.v1.Post
	6,  // 100: doota.portal.v1.PortalService.GetPosts:output_type -> doota.portal.v1.GetPostsResponse
	71, // 101: doota.portal.v1.PortalService.UpdatePost:output_type -> doota.core.v1.Post
	67, // 102: doota.portal.v1.PortalService.DeletePost:output_type -> google.protobuf.Empty
	70, // [70:103] is the sub-list for method output_type
	37, // [37:70] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_doota_portal_v1_portal_proto_init() }
func file_doota_portal_v1_portal_proto_init() {
	if File_doota_portal_v1_portal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_doota_portal_v1_portal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsightsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiateSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiateSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeadInteractionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeadInteractionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRedditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRedditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAutomationSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeywordsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeadInteractionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeadStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelevantLeadsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeadsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeadAnalysis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomerCaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeywordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordlessStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordlessStartVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthAuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthAuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationFeatureFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomationSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedditIntegration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integrations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSourceOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doota_portal_v1_portal_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthCallbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_doota_portal_v1_portal_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_doota_portal_v1_portal_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_doota_portal_v1_portal_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*Integration_Reddit)(nil),
	}
	file_doota_portal_v1_portal_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_doota_portal_v1_portal_proto_msgTypes[47].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doota_portal_v1_portal_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_doota_portal_v1_portal_proto_goTypes,
		DependencyIndexes: file_doota_portal_v1_portal_proto_depIdxs,
		EnumInfos:         file_doota_portal_v1_portal_proto_enumTypes,
		MessageInfos:      file_doota_portal_v1_portal_proto_msgTypes,
	}.Build()
	File_doota_portal_v1_portal_proto = out.File
	file_doota_portal_v1_portal_proto_rawDesc = nil
	file_doota_portal_v1_portal_proto_goTypes = nil
	file_doota_portal_v1_portal_proto_depIdxs = nil
}
