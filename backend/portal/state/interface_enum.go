// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package state

import (
	"errors"
	"fmt"
)

const (
	// AuthStateContextIntegration is a AuthStateContext of type integration.
	AuthStateContextIntegration AuthStateContext = "integration"
	// AuthStateContextMessageSource is a AuthStateContext of type message_source.
	AuthStateContextMessageSource AuthStateContext = "message_source"
)

var ErrInvalidAuthStateContext = errors.New("not a valid AuthStateContext")

// String implements the Stringer interface.
func (x AuthStateContext) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x AuthStateContext) IsValid() bool {
	_, err := ParseAuthStateContext(string(x))
	return err == nil
}

var _AuthStateContextValue = map[string]AuthStateContext{
	"integration":    AuthStateContextIntegration,
	"message_source": AuthStateContextMessageSource,
}

// ParseAuthStateContext attempts to convert a string to a AuthStateContext.
func ParseAuthStateContext(name string) (AuthStateContext, error) {
	if x, ok := _AuthStateContextValue[name]; ok {
		return x, nil
	}
	return AuthStateContext(""), fmt.Errorf("%s is %w", name, ErrInvalidAuthStateContext)
}
