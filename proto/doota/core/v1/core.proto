syntax = "proto3";

package doota.core.v1;

option go_package = "github.com/shank318/doota/pb/doota/core/v1;pbcore";
import "google/protobuf/timestamp.proto";

import "google/protobuf/any.proto";



// TzTimestamp is a wrapper around Timestamp that includes a timezone offset
// for displaying time in a specific timezone. Although timestamps are stored
// with their extracted timezone offsets in the database (e.g., 2024-10-23 16:19:23 EST
// is stored as "2024-10-23T16:19:23-05:00" in the DB and not its UTC equivalent of "2024-10-23T21:19:23Z"),
// we want to ensure they are displayed consistently in the timezone they were extracted from.
//
// We cannot use the basic Timestamp object from protobuf because it only
// represents a UTC timestamp without a timezone offset.
//
// Example:
//     Suppose we have an extracted timestamp of "2024-10-23 16:19:23 EST".
//     In the database, it will be stored as "2024-10-23T16:19:23-05:00",
//     preserving the extracted timezone. The TzTimestamp representation would be:
//
//     TzTimestamp {
//         timestamp = 1730233163  // UTC seconds since Unix epoch for 2024-10-23T16:19:23-05:00
//         offset = -5
//     }
message TzTimestamp {
  google.protobuf.Timestamp timestamp = 1;
  int32  offset = 2;
}


message Identity {
  string user_id = 1;
  string organization_id = 2;
  IdentityRole role = 3;
}

enum PlatformError {
    PLATFORM_ERROR_UNSPECIFIED = 0;
    PLATFORM_ERROR_MESSAGE_ALREADY_EXISTS = 1;
    PLATFORM_ERROR_INVALID_QUOTE = 2;
    PLATFORM_UNAUTHORIZED_ACCESS = 3;
    PLATFORM_ERROR_PRICING_OPTION_INVALID_ARG = 4;
}

message PlatformErrorDetails {
    PlatformError error = 1;
    google.protobuf.Any details = 2;
}

message QuoteFormErrorDetails {
  repeated QuoteFormErrorDetail details = 1;
}

message QuoteFormErrorDetail {
  string path = 1;
  enum QuoteFormErrorDetailMessage  {
    QUOTE_FORM_ERROR_DETAIL_MESSAGE_UNSPECIFIED = 0;
    QUOTE_FORM_ERROR_DETAIL_MESSAGE_INVALID_GEO = 1;
  }
    QuoteFormErrorDetailMessage detail = 2;

}

message PricingOptionErrorDetail {
    int64 status_code = 1;
    string message = 2;
    string transaction_id = 3;
    enum PricingOptionErrorDetailMessage  {
        PRICING_OPTION_ERROR_DETAIL_MESSAGE_UNSPECIFIED = 0;
        PRICING_OPTION_ERROR_DETAIL_MESSAGE_INVALID_ORIGIN = 1;
        PRICING_OPTION_ERROR_DETAIL_MESSAGE_INVALID_DESTINATION = 2;
    }
    PricingOptionErrorDetailMessage detail = 4;
}

enum IdentityRole {
  IDENTITY_ROLE_UNSPECIFIED = 0;
  IDENTITY_ROLE_USER = 1;
  IDENTITY_ROLE_ADMIN = 2;
  IDENTITY_ROLE_PLATFORM_ADMIN = 3;
}

enum Currency {
    CURRENCY_UNSPECIFIED = 0;
    CURRENCY_USD = 1;
    CURRENCY_AED = 2;
    CURRENCY_AFN = 3;
    CURRENCY_ALL = 4;
    CURRENCY_AMD = 5;
    CURRENCY_ANG = 6;
    CURRENCY_AOA = 7;
    CURRENCY_ARS = 8;
    CURRENCY_AUD = 9;
    CURRENCY_AWG = 10;
    CURRENCY_AZN = 11;
    CURRENCY_BAM = 12;
    CURRENCY_BBD = 13;
    CURRENCY_BDT = 14;
    CURRENCY_BGN = 15;
    CURRENCY_BIF = 16;
    CURRENCY_BMD = 17;
    CURRENCY_BND = 18;
    CURRENCY_BOB = 19;
    CURRENCY_BRL = 20;
    CURRENCY_BSD = 21;
    CURRENCY_BWP = 22;
    CURRENCY_BYN = 23;
    CURRENCY_BZD = 24;
    CURRENCY_CAD = 25;
    CURRENCY_CDF = 26;
    CURRENCY_CHF = 27;
    CURRENCY_CLP = 28;
    CURRENCY_CNY = 29;
    CURRENCY_COP = 30;
    CURRENCY_CRC = 31;
    CURRENCY_CVE = 32;
    CURRENCY_CZK = 33;
    CURRENCY_DJF = 34;
    CURRENCY_DKK = 35;
    CURRENCY_DOP = 36;
    CURRENCY_DZD = 37;
    CURRENCY_EGP = 38;
    CURRENCY_ETB = 39;
    CURRENCY_EUR = 40;
    CURRENCY_FJD = 41;
    CURRENCY_FKP = 42;
    CURRENCY_GBP = 43;
    CURRENCY_GEL = 44;
    CURRENCY_GIP = 45;
    CURRENCY_GMD = 46;
    CURRENCY_GNF = 47;
    CURRENCY_GTQ = 48;
    CURRENCY_GYD = 49;
    CURRENCY_HKD = 50;
    CURRENCY_HNL = 51;
    CURRENCY_HTG = 52;
    CURRENCY_HUF = 53;
    CURRENCY_IDR = 54;
    CURRENCY_ILS = 55;
    CURRENCY_INR = 56;
    CURRENCY_ISK = 57;
    CURRENCY_JMD = 58;
    CURRENCY_JPY = 59;
    CURRENCY_KES = 60;
    CURRENCY_KGS = 61;
    CURRENCY_KHR = 62;
    CURRENCY_KMF = 63;
    CURRENCY_KRW = 64;
    CURRENCY_KYD = 65;
    CURRENCY_KZT = 66;
    CURRENCY_LAK = 67;
    CURRENCY_LBP = 68;
    CURRENCY_LKR = 69;
    CURRENCY_LRD = 70;
    CURRENCY_LSL = 71;
    CURRENCY_MAD = 72;
    CURRENCY_MDL = 73;
    CURRENCY_MGA = 74;
    CURRENCY_MKD = 75;
    CURRENCY_MMK = 76;
    CURRENCY_MNT = 77;
    CURRENCY_MOP = 78;
    CURRENCY_MUR = 79;
    CURRENCY_MVR = 80;
    CURRENCY_MWK = 81;
    CURRENCY_MXN = 82;
    CURRENCY_MYR = 83;
    CURRENCY_MZN = 84;
    CURRENCY_NAD = 85;
    CURRENCY_NGN = 86;
    CURRENCY_NIO = 87;
    CURRENCY_NOK = 88;
    CURRENCY_NPR = 89;
    CURRENCY_NZD = 90;
    CURRENCY_PAB = 91;
    CURRENCY_PEN = 92;
    CURRENCY_PGK = 93;
    CURRENCY_PHP = 94;
    CURRENCY_PKR = 95;
    CURRENCY_PLN = 96;
    CURRENCY_PYG = 97;
    CURRENCY_QAR = 98;
    CURRENCY_RON = 99;
    CURRENCY_RSD = 100;
    CURRENCY_RUB = 101;
    CURRENCY_RWF = 102;
    CURRENCY_SAR = 103;
    CURRENCY_SBD = 104;
    CURRENCY_SCR = 105;
    CURRENCY_SEK = 106;
    CURRENCY_SGD = 107;
    CURRENCY_SHP = 108;
    CURRENCY_SLE = 109;
    CURRENCY_SOS = 110;
    CURRENCY_SRD = 111;
    CURRENCY_STD = 112;
    CURRENCY_SZL = 113;
    CURRENCY_THB = 114;
    CURRENCY_TJS = 115;
    CURRENCY_TOP = 116;
    CURRENCY_TRY = 117;
    CURRENCY_TTD = 118;
    CURRENCY_TWD = 119;
    CURRENCY_TZS = 120;
    CURRENCY_UAH = 121;
    CURRENCY_UGX = 122;
    CURRENCY_UYU = 123;
    CURRENCY_UZS = 124;
    CURRENCY_VND = 125;
    CURRENCY_VUV = 126;
    CURRENCY_WST = 127;
    CURRENCY_XAF = 128;
    CURRENCY_XCD = 129;
    CURRENCY_XOF = 130;
    CURRENCY_XPF = 131;
    CURRENCY_YER = 132;
    CURRENCY_ZAR = 133;
    CURRENCY_ZMW = 134;
}