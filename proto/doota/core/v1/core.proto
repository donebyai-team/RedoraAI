syntax = "proto3";

package doota.core.v1;

option go_package = "github.com/shank318/doota/pb/doota/core/v1;pbcore";
import "google/protobuf/timestamp.proto";

import "google/protobuf/any.proto";


// TzTimestamp is a wrapper around Timestamp that includes a timezone offset
// for displaying time in a specific timezone. Although timestamps are stored
// with their extracted timezone offsets in the database (e.g., 2024-10-23 16:19:23 EST
// is stored as "2024-10-23T16:19:23-05:00" in the DB and not its UTC equivalent of "2024-10-23T21:19:23Z"),
// we want to ensure they are displayed consistently in the timezone they were extracted from.
//
// We cannot use the basic Timestamp object from protobuf because it only
// represents a UTC timestamp without a timezone offset.
//
// Example:
//     Suppose we have an extracted timestamp of "2024-10-23 16:19:23 EST".
//     In the database, it will be stored as "2024-10-23T16:19:23-05:00",
//     preserving the extracted timezone. The TzTimestamp representation would be:
//
//     TzTimestamp {
//         timestamp = 1730233163  // UTC seconds since Unix epoch for 2024-10-23T16:19:23-05:00
//         offset = -5
//     }
message TzTimestamp {
  google.protobuf.Timestamp timestamp = 1;
  int32  offset = 2;
}


message Identity {
  string user_id = 1;
  string organization_id = 2;
  IdentityRole role = 3;
}

enum PlatformError {
    PLATFORM_ERROR_UNSPECIFIED = 0;
    PLATFORM_ERROR_MESSAGE_ALREADY_EXISTS = 1;
    PLATFORM_ERROR_INVALID_QUOTE = 2;
    PLATFORM_UNAUTHORIZED_ACCESS = 3;
    PLATFORM_ERROR_PRICING_OPTION_INVALID_ARG = 4;
}

message PlatformErrorDetails {
    PlatformError error = 1;
    google.protobuf.Any details = 2;
}

enum IdentityRole {
  IDENTITY_ROLE_UNSPECIFIED = 0;
  IDENTITY_ROLE_USER = 1;
  IDENTITY_ROLE_ADMIN = 2;
  IDENTITY_ROLE_PLATFORM_ADMIN = 3;
}

enum SourceType {
  SOURCE_TYPE_UNSPECIFIED = 0;
  SOURCE_TYPE_SUBREDDIT = 1;
}

message Source {
  string id = 1;
  string name = 2;
  string description = 3;
  SourceType SourceType = 4;
  oneof details {
    SubRedditMetadata reddit_metadata = 5;
  }
}

message SubRedditMetadata {
  optional string title = 1;
  google.protobuf.Timestamp created_at = 2;
}

message LeadMetadata {
  string chain_of_thought = 1;
  string suggested_comment = 2;
  string suggested_dm = 3;
  string chain_of_thought_suggested_comment = 4;
  string chain_of_thought_suggested_dm = 5;
  string post_url = 6;
  string description_html = 7;
  string subreddit_prefixed = 8;
  int64 no_of_comments = 9;
  int64 ups = 10;
  string author_url = 11;
  string dm_url = 12;
  string automated_comment_url = 13;
  string comment_llm_model = 14;
  string dm_llm_model = 15;
  string relevancy_llm_model = 16;
  string llm_model_response_overridden_by = 17;
  optional google.protobuf.Timestamp comment_scheduled_at = 18;
  bool automated_dm_sent = 19;
  optional google.protobuf.Timestamp dm_scheduled_at = 20;
}

message Lead {
  string id = 1;
  string project_id = 2;
  string source_id = 3;
  string author = 4;
  string post_id = 5;
  LeadType type = 6;
  LeadStatus status = 7;
  double relevancy_score = 8;
  google.protobuf.Timestamp post_created_at = 9;
  optional string title = 10;
  string description = 11;
  LeadMetadata metadata = 12;
  google.protobuf.Timestamp created_at = 13;
  Keyword keyword = 14;
  repeated string intents = 15;
}

enum LeadInteractionType {
  LEAD_INTERACTION_UNSPECIFIED = 0;
  LEAD_INTERACTION_COMMENT= 1;
  LEAD_INTERACTION_DM = 2;
}

enum LeadInteractionStatus {
  LEAD_INTERACTION_STATUS_UNSPECIFIED = 0;
  LEAD_INTERACTION_STATUS_SENT= 1;
  LEAD_INTERACTION_STATUS_CREATED = 2;
  LEAD_INTERACTION_STATUS_FAILED = 3;
  LEAD_INTERACTION_STATUS_PROCESSING = 4;
  LEAD_INTERACTION_STATUS_REMOVED= 5;
}

message LeadInteraction {
  string id =1;
  string project_id=2;
  string lead_id=3;
  LeadInteractionType interaction_type = 4;
  string from = 5;
  string to = 6;
  LeadInteractionStatus status = 7;
  string reason = 8;
  LeadMetadata lead_metadata = 9;
  string post_title = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp scheduled_at = 12;
}

enum LeadStatus {
  NEW = 0;
  NOT_RELEVANT = 1;
  COMPLETED = 2;
  LEAD = 3;
  AI_RESPONDED = 4;
}

enum LeadType {
  POST = 0;
  COMMENT = 1;
}

message Keyword {
  string id = 1;
  string name = 2;
}

message Project {
  string id = 1;
  string name = 2;
  string description = 3;
  string website = 4;
  string target_persona = 5;
  repeated Keyword keywords = 6;
  repeated Source sources = 7;
  repeated string suggested_keywords = 8;
  repeated string suggested_sources = 9;
  bool is_active = 10;
}

enum SubscriptionStatus {
  SUBSCRIPTION_STATUS_ACTIVE = 0;
  SUBSCRIPTION_STATUS_EXPIRED = 1;
  SUBSCRIPTION_STATUS_FAILED = 2;
  SUBSCRIPTION_STATUS_CREATED= 3;
  SUBSCRIPTION_STATUS_CANCELLED= 4;
}

enum SubscriptionPlanID {
  SUBSCRIPTION_PLAN_UNKNOWN = 0;
  SUBSCRIPTION_PLAN_FREE = 1;
  SUBSCRIPTION_PLAN_FOUNDER = 2;
  SUBSCRIPTION_PLAN_PRO = 3;
  SUBSCRIPTION_PLAN_ENTERPRISE = 4;
  SUBSCRIPTION_PLAN_STARTER = 5;
}

message UsageLimit {
  int32 per_day = 1;
  int32 per_month = 2;
}

message Subscription {
  SubscriptionStatus status = 1;
  int32 max_keywords = 2;
  int32 max_sources = 3;
  UsageLimit comments =4;
  UsageLimit dm = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp expires_at = 7;
  SubscriptionPlanID plan_id = 8;
  optional string id = 9;
}