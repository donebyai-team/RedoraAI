syntax = "proto3";

package doota.reddit.v1;
import "google/protobuf/timestamp.proto";
option go_package = "github.com/shank318/doota/pb/doota/reddit/v1;pbreddit";

message Integration {
  string user_name = 1;
}

message RemoveSubRedditRequest {
  string id = 1; // eg. r/SAAS
}

message AddSubRedditRequest {
  string url = 1; // eg. r/SAAS
}

message SubReddit {
  string id = 1;
  string url = 2;
  string name = 3;
  string description = 4;
  SubRedditMetadata metadata = 5;
  optional string title = 6;
}

message SubRedditMetadata {}

message GetSubredditsResponse {
  repeated SubReddit subreddits = 1;
}

enum LeadStatus {
  NEW = 0;
  NOT_RELEVANT = 1;
  COMPLETED = 3;
}

enum LeadType {
  POST = 0;
  COMMENT = 1;
}

message UpdateLeadStatusRequest {
  LeadStatus status = 1;
  string lead_id = 2;
}

message GetLeadsByStatusRequest {
  LeadStatus status = 1;
}

message GetRelevantLeadsRequest {
  optional string sub_reddit = 1;
  float relevancy_score = 2;
}

message GetLeadsResponse {
  repeated RedditLead leads = 1;
}

message LeadMetadata {
  string chain_of_thought = 1;
  string suggested_comment = 2;
  string suggested_dm = 3;
  string chain_of_thought_suggested_comment = 4;
  string chain_of_thought_comment_suggested_dm = 5;
  string post_url = 6;
}

message RedditLead {
  string id = 1;
  string project_id = 2;
  string subreddit_id = 3;
  string author = 4;
  string post_id = 5;
  LeadType type = 6;
  LeadStatus status = 7;
  double relevancy_score = 8;
  google.protobuf.Timestamp post_created_at = 9;
  optional string title = 10;
  string description = 11;
  LeadMetadata metadata = 12;
  google.protobuf.Timestamp created_at = 13;
}
