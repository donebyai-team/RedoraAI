services:
  postgres:
    container_name: postgres-doota
    build:
      # We put an mostly empty existing folder since we actually need nothing from context
      context: .
      dockerfile: ./devel/Dockerfile.postgres
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements",  "-cmax_connections=1000"]
    #command: ["postgres", "-cshared_preload_libraries=pg_stat_statements", "-clog_statement=all"]
    environment:
      POSTGRES_USER: dev-node
      POSTGRES_PASSWORD: insecure-change-me-in-prod
      POSTGRES_DB: dev-node
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - ./devel/data/postgres:/var/lib/postgresql/data
      - ./devel/db/initialize-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 15
  redis:
    container_name: redis-doota
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./devel/data/redis/d–∞ta:/root/redis
      - ./devel/data/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
  pgweb:
    container_name: pgweb-doota
    image: sosedoff/pgweb:0.15.0
    restart: on-failure
    ports:
      - "8081:8081"
    command: ["pgweb", "--bind=0.0.0.0", "--listen=8081", "--binary-codec=hex"]
    links:
      - postgres:postgres
    environment:
      - DATABASE_URL=postgres://dev-node:insecure-change-me-in-prod@postgres:5432/dev-node?sslmode=disable
    depends_on:
      - postgres
