// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file doota/core/v1/core.proto (package doota.core.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file doota/core/v1/core.proto.
 */
export declare const file_doota_core_v1_core: GenFile;

/**
 * TzTimestamp is a wrapper around Timestamp that includes a timezone offset
 * for displaying time in a specific timezone. Although timestamps are stored
 * with their extracted timezone offsets in the database (e.g., 2024-10-23 16:19:23 EST
 * is stored as "2024-10-23T16:19:23-05:00" in the DB and not its UTC equivalent of "2024-10-23T21:19:23Z"),
 * we want to ensure they are displayed consistently in the timezone they were extracted from.
 *
 * We cannot use the basic Timestamp object from protobuf because it only
 * represents a UTC timestamp without a timezone offset.
 *
 * Example:
 *     Suppose we have an extracted timestamp of "2024-10-23 16:19:23 EST".
 *     In the database, it will be stored as "2024-10-23T16:19:23-05:00",
 *     preserving the extracted timezone. The TzTimestamp representation would be:
 *
 *     TzTimestamp {
 *         timestamp = 1730233163  // UTC seconds since Unix epoch for 2024-10-23T16:19:23-05:00
 *         offset = -5
 *     }
 *
 * @generated from message doota.core.v1.TzTimestamp
 */
export declare type TzTimestamp = Message<"doota.core.v1.TzTimestamp"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: int32 offset = 2;
   */
  offset: number;
};

/**
 * Describes the message doota.core.v1.TzTimestamp.
 * Use `create(TzTimestampSchema)` to create a new message.
 */
export declare const TzTimestampSchema: GenMessage<TzTimestamp>;

/**
 * @generated from message doota.core.v1.Identity
 */
export declare type Identity = Message<"doota.core.v1.Identity"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: doota.core.v1.IdentityRole role = 3;
   */
  role: IdentityRole;
};

/**
 * Describes the message doota.core.v1.Identity.
 * Use `create(IdentitySchema)` to create a new message.
 */
export declare const IdentitySchema: GenMessage<Identity>;

/**
 * @generated from message doota.core.v1.PlatformErrorDetails
 */
export declare type PlatformErrorDetails = Message<"doota.core.v1.PlatformErrorDetails"> & {
  /**
   * @generated from field: doota.core.v1.PlatformError error = 1;
   */
  error: PlatformError;

  /**
   * @generated from field: google.protobuf.Any details = 2;
   */
  details?: Any;
};

/**
 * Describes the message doota.core.v1.PlatformErrorDetails.
 * Use `create(PlatformErrorDetailsSchema)` to create a new message.
 */
export declare const PlatformErrorDetailsSchema: GenMessage<PlatformErrorDetails>;

/**
 * @generated from message doota.core.v1.Source
 */
export declare type Source = Message<"doota.core.v1.Source"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: doota.core.v1.SourceType SourceType = 4;
   */
  SourceType: SourceType;

  /**
   * @generated from oneof doota.core.v1.Source.details
   */
  details: {
    /**
     * @generated from field: doota.core.v1.SubRedditMetadata reddit_metadata = 5;
     */
    value: SubRedditMetadata;
    case: "redditMetadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message doota.core.v1.Source.
 * Use `create(SourceSchema)` to create a new message.
 */
export declare const SourceSchema: GenMessage<Source>;

/**
 * @generated from message doota.core.v1.SubRedditMetadata
 */
export declare type SubRedditMetadata = Message<"doota.core.v1.SubRedditMetadata"> & {
  /**
   * @generated from field: optional string title = 1;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message doota.core.v1.SubRedditMetadata.
 * Use `create(SubRedditMetadataSchema)` to create a new message.
 */
export declare const SubRedditMetadataSchema: GenMessage<SubRedditMetadata>;

/**
 * @generated from message doota.core.v1.LeadMetadata
 */
export declare type LeadMetadata = Message<"doota.core.v1.LeadMetadata"> & {
  /**
   * @generated from field: string chain_of_thought = 1;
   */
  chainOfThought: string;

  /**
   * @generated from field: string suggested_comment = 2;
   */
  suggestedComment: string;

  /**
   * @generated from field: string suggested_dm = 3;
   */
  suggestedDm: string;

  /**
   * @generated from field: string chain_of_thought_suggested_comment = 4;
   */
  chainOfThoughtSuggestedComment: string;

  /**
   * @generated from field: string chain_of_thought_suggested_dm = 5;
   */
  chainOfThoughtSuggestedDm: string;

  /**
   * @generated from field: string post_url = 6;
   */
  postUrl: string;

  /**
   * @generated from field: string description_html = 7;
   */
  descriptionHtml: string;

  /**
   * @generated from field: string subreddit_prefixed = 8;
   */
  subredditPrefixed: string;

  /**
   * @generated from field: int64 no_of_comments = 9;
   */
  noOfComments: bigint;

  /**
   * @generated from field: int64 ups = 10;
   */
  ups: bigint;

  /**
   * @generated from field: string author_url = 11;
   */
  authorUrl: string;

  /**
   * @generated from field: string dm_url = 12;
   */
  dmUrl: string;

  /**
   * @generated from field: string automated_comment_url = 13;
   */
  automatedCommentUrl: string;

  /**
   * @generated from field: string comment_llm_model = 14;
   */
  commentLlmModel: string;

  /**
   * @generated from field: string dm_llm_model = 15;
   */
  dmLlmModel: string;

  /**
   * @generated from field: string relevancy_llm_model = 16;
   */
  relevancyLlmModel: string;
};

/**
 * Describes the message doota.core.v1.LeadMetadata.
 * Use `create(LeadMetadataSchema)` to create a new message.
 */
export declare const LeadMetadataSchema: GenMessage<LeadMetadata>;

/**
 * @generated from message doota.core.v1.Lead
 */
export declare type Lead = Message<"doota.core.v1.Lead"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * @generated from field: string source_id = 3;
   */
  sourceId: string;

  /**
   * @generated from field: string author = 4;
   */
  author: string;

  /**
   * @generated from field: string post_id = 5;
   */
  postId: string;

  /**
   * @generated from field: doota.core.v1.LeadType type = 6;
   */
  type: LeadType;

  /**
   * @generated from field: doota.core.v1.LeadStatus status = 7;
   */
  status: LeadStatus;

  /**
   * @generated from field: double relevancy_score = 8;
   */
  relevancyScore: number;

  /**
   * @generated from field: google.protobuf.Timestamp post_created_at = 9;
   */
  postCreatedAt?: Timestamp;

  /**
   * @generated from field: optional string title = 10;
   */
  title?: string;

  /**
   * @generated from field: string description = 11;
   */
  description: string;

  /**
   * @generated from field: doota.core.v1.LeadMetadata metadata = 12;
   */
  metadata?: LeadMetadata;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 13;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: doota.core.v1.Keyword keyword = 14;
   */
  keyword?: Keyword;

  /**
   * @generated from field: repeated string intents = 15;
   */
  intents: string[];
};

/**
 * Describes the message doota.core.v1.Lead.
 * Use `create(LeadSchema)` to create a new message.
 */
export declare const LeadSchema: GenMessage<Lead>;

/**
 * @generated from message doota.core.v1.Keyword
 */
export declare type Keyword = Message<"doota.core.v1.Keyword"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message doota.core.v1.Keyword.
 * Use `create(KeywordSchema)` to create a new message.
 */
export declare const KeywordSchema: GenMessage<Keyword>;

/**
 * @generated from message doota.core.v1.Project
 */
export declare type Project = Message<"doota.core.v1.Project"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string website = 4;
   */
  website: string;

  /**
   * @generated from field: string target_persona = 5;
   */
  targetPersona: string;

  /**
   * @generated from field: repeated doota.core.v1.Keyword keywords = 6;
   */
  keywords: Keyword[];

  /**
   * @generated from field: repeated doota.core.v1.Source sources = 7;
   */
  sources: Source[];
};

/**
 * Describes the message doota.core.v1.Project.
 * Use `create(ProjectSchema)` to create a new message.
 */
export declare const ProjectSchema: GenMessage<Project>;

/**
 * @generated from enum doota.core.v1.PlatformError
 */
export enum PlatformError {
  /**
   * @generated from enum value: PLATFORM_ERROR_UNSPECIFIED = 0;
   */
  PLATFORM_ERROR_UNSPECIFIED = 0,

  /**
   * @generated from enum value: PLATFORM_ERROR_MESSAGE_ALREADY_EXISTS = 1;
   */
  PLATFORM_ERROR_MESSAGE_ALREADY_EXISTS = 1,

  /**
   * @generated from enum value: PLATFORM_ERROR_INVALID_QUOTE = 2;
   */
  PLATFORM_ERROR_INVALID_QUOTE = 2,

  /**
   * @generated from enum value: PLATFORM_UNAUTHORIZED_ACCESS = 3;
   */
  PLATFORM_UNAUTHORIZED_ACCESS = 3,

  /**
   * @generated from enum value: PLATFORM_ERROR_PRICING_OPTION_INVALID_ARG = 4;
   */
  PLATFORM_ERROR_PRICING_OPTION_INVALID_ARG = 4,
}

/**
 * Describes the enum doota.core.v1.PlatformError.
 */
export declare const PlatformErrorSchema: GenEnum<PlatformError>;

/**
 * @generated from enum doota.core.v1.IdentityRole
 */
export enum IdentityRole {
  /**
   * @generated from enum value: IDENTITY_ROLE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: IDENTITY_ROLE_USER = 1;
   */
  USER = 1,

  /**
   * @generated from enum value: IDENTITY_ROLE_ADMIN = 2;
   */
  ADMIN = 2,

  /**
   * @generated from enum value: IDENTITY_ROLE_PLATFORM_ADMIN = 3;
   */
  PLATFORM_ADMIN = 3,
}

/**
 * Describes the enum doota.core.v1.IdentityRole.
 */
export declare const IdentityRoleSchema: GenEnum<IdentityRole>;

/**
 * @generated from enum doota.core.v1.SourceType
 */
export enum SourceType {
  /**
   * @generated from enum value: SOURCE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SOURCE_TYPE_SUBREDDIT = 1;
   */
  SUBREDDIT = 1,
}

/**
 * Describes the enum doota.core.v1.SourceType.
 */
export declare const SourceTypeSchema: GenEnum<SourceType>;

/**
 * @generated from enum doota.core.v1.LeadStatus
 */
export enum LeadStatus {
  /**
   * @generated from enum value: NEW = 0;
   */
  NEW = 0,

  /**
   * @generated from enum value: NOT_RELEVANT = 1;
   */
  NOT_RELEVANT = 1,

  /**
   * @generated from enum value: COMPLETED = 3;
   */
  COMPLETED = 3,
}

/**
 * Describes the enum doota.core.v1.LeadStatus.
 */
export declare const LeadStatusSchema: GenEnum<LeadStatus>;

/**
 * @generated from enum doota.core.v1.LeadType
 */
export enum LeadType {
  /**
   * @generated from enum value: POST = 0;
   */
  POST = 0,

  /**
   * @generated from enum value: COMMENT = 1;
   */
  COMMENT = 1,
}

/**
 * Describes the enum doota.core.v1.LeadType.
 */
export declare const LeadTypeSchema: GenEnum<LeadType>;

