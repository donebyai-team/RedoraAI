// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file doota/portal/v1/portal.proto (package doota.portal.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file doota/portal/v1/portal.proto.
 */
export const file_doota_portal_v1_portal = /*@__PURE__*/
  fileDesc("Chxkb290YS9wb3J0YWwvdjEvcG9ydGFsLnByb3RvEg9kb290YS5wb3J0YWwudjEiJAoWUmVtb3ZlU3ViUmVkZGl0UmVxdWVzdBIKCgJpZBgBIAEoCSIiChNBZGRTdWJSZWRkaXRSZXF1ZXN0EgsKA3VybBgBIAEoCSKbAQoJU3ViUmVkZGl0EgoKAmlkGAEgASgJEgsKA3VybBgCIAEoCRIMCgRuYW1lGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJEjQKCG1ldGFkYXRhGAUgASgLMiIuZG9vdGEucG9ydGFsLnYxLlN1YlJlZGRpdE1ldGFkYXRhEhIKBXRpdGxlGAYgASgJSACIAQFCCAoGX3RpdGxlIhMKEVN1YlJlZGRpdE1ldGFkYXRhIkcKFUdldFN1YnJlZGRpdHNSZXNwb25zZRIuCgpzdWJyZWRkaXRzGAEgAygLMhouZG9vdGEucG9ydGFsLnYxLlN1YlJlZGRpdCKNAQoVQ3JlYXRlQ3VzdG9tZXJDYXNlUmVxEhIKCmZpcnN0X25hbWUYASABKAkSEQoJbGFzdF9uYW1lGAIgASgJEg0KBXBob25lGAMgASgJEhcKD29yZ2FuaXphdGlvbl9pZBgEIAEoCRIQCghkdWVfZGF0ZRgFIAEoCRITCgtwcm9tcHRfdHlwZRgGIAEoCSIjChBDcmVhdGVLZXl3b3JkUmVxEg8KB2tleXdvcmQYASABKAkiNQoIQmF0Y2hSZXESEAoIY3N2X2RhdGEYASABKAwSFwoPb3JnYW5pemF0aW9uX2lkGAIgASgJIkgKCUJhdGNoUmVzcBIMCgRyb3dzGAEgASgFEhYKDnJvd3NfZXh0cmFjdGVkGAIgASgFEhUKDXJlamVjdGVkX3Jvd3MYAyADKAkirAEKBkNvbmZpZxIUCgxhdXRoMF9kb21haW4YASABKAkSFwoPYXV0aDBfY2xpZW50X2lkGAIgASgJEhMKC2F1dGgwX3Njb3BlGAMgASgJEiAKGG1zb2Z0X2F1dGgwX2NhbGxiYWNrX3VybBgEIAEoCRIZChFmdWxsX3N0b3J5X29yZ19pZBgFIAEoCRIhChlnb29nbGVfYXV0aDBfY2FsbGJhY2tfdXJsGAYgASgJIj8KGFBhc3N3b3JkbGVzc1N0YXJ0UmVxdWVzdBIUCgxyZWRpcmVjdF91cmkYASABKAkSDQoFZW1haWwYAiABKAkiNgoXUGFzc3dvcmRsZXNzU3RhcnRWZXJpZnkSDQoFZW1haWwYASABKAkSDAoEY29kZRgCIAEoCSIoChBBdXRoU3RhdGVSZXF1ZXN0EhQKDHJlZGlyZWN0X3VyaRgBIAEoCSIlCgVTdGF0ZRINCgVzdGF0ZRgBIAEoCRINCgVub25jZRgCIAEoCSLIAQoEVXNlchIKCgJpZBgBIAEoCRINCgVlbWFpbBgCIAEoCRIWCg5lbWFpbF92ZXJpZmllZBgDIAEoCBInCgRyb2xlGAQgASgOMhkuZG9vdGEucG9ydGFsLnYxLlVzZXJSb2xlEjQKDW9yZ2FuaXphdGlvbnMYByADKAsyHS5kb290YS5wb3J0YWwudjEuT3JnYW5pemF0aW9uEi4KCmNyZWF0ZWRfYXQYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wImkKFU9hdXRoQXV0aG9yaXplUmVxdWVzdBI6ChBpbnRlZ3JhdGlvbl90eXBlGAEgASgOMiAuZG9vdGEucG9ydGFsLnYxLkludGVncmF0aW9uVHlwZRIUCgxyZWRpcmVjdF91cmwYAiABKAkiLwoWT2F1dGhBdXRob3JpemVSZXNwb25zZRIVCg1hdXRob3JpemVfdXJsGAEgASgJIisKDElzc3VlUmVxdWVzdBIMCgRjb2RlGAEgASgJEg0KBXN0YXRlGAIgASgJIigKA0pXVBINCgV0b2tlbhgBIAEoCRISCgpleHBpcmVzX2F0GAIgASgDIpoBCgxPcmdhbml6YXRpb24SCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRJACg1mZWF0dXJlX2ZsYWdzGAMgASgLMikuZG9vdGEucG9ydGFsLnYxLk9yZ2FuaXphdGlvbkZlYXR1cmVGbGFncxIuCgpjcmVhdGVkX2F0GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCIaChhPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3MilQEKC0ludGVncmF0aW9uEgoKAmlkGAEgASgJEhcKD29yZ2FuaXphdGlvbl9pZBgCIAEoCRIuCgR0eXBlGAMgASgOMiAuZG9vdGEucG9ydGFsLnYxLkludGVncmF0aW9uVHlwZRIxCgZzdGF0dXMYBCABKA4yIS5kb290YS5wb3J0YWwudjEuSW50ZWdyYXRpb25TdGF0ZSJHChVHZXRJbnRlZ3JhdGlvblJlcXVlc3QSLgoEdHlwZRgBIAEoDjIgLmRvb3RhLnBvcnRhbC52MS5JbnRlZ3JhdGlvblR5cGUisgEKDkFkZFVzZXJSZXF1ZXN0Eg0KBWVtYWlsGAEgASgJEkIKDm1lc3NhZ2Vfc291cmNlGAIgASgLMiUuZG9vdGEucG9ydGFsLnYxLk1lc3NhZ2VTb3VyY2VPcHRpb25zSACIAQESOgoQaW50ZWdyYXRpb25fdHlwZRgDIAEoDjIgLmRvb3RhLnBvcnRhbC52MS5JbnRlZ3JhdGlvblR5cGVCEQoPX21lc3NhZ2Vfc291cmNlIi0KEFJlbmV3VXNlclJlcXVlc3QSGQoRbWVzc2FnZV9zb3VyY2VfaWQYASABKAkiTwoUTWVzc2FnZVNvdXJjZU9wdGlvbnMSFgoOaW50ZWdyYXRpb25faWQYASABKAkSHwoXaW50ZWdyYXRpb25fZXh0ZXJuYWxfaWQYAiABKAkiUwoUT2F1dGhDYWxsYmFja1JlcXVlc3QSDQoFc3RhdGUYASABKAkSGgoNZXh0ZXJuYWxfY29kZRgCIAEoCUgAiAEBQhAKDl9leHRlcm5hbF9jb2RlIi0KFU9hdXRoQ2FsbGJhY2tSZXNwb25zZRIUCgxyZWRpcmVjdF91cmwYASABKAkqYAoST2F1dGhBdXRob3JpemVUeXBlEiQKIE9BVVRIX0FVVEhPUklaRV9UWVBFX1VOU1BFQ0lGSUVEEAASJAogT0FVVEhfQVVUSE9SSVpFX1RZUEVfSU5URUdSQVRJT04QASpsCghVc2VyUm9sZRIZChVVU0VSX1JPTEVfVU5TUEVDSUZJRUQQABISCg5VU0VSX1JPTEVfVVNFUhABEhMKD1VTRVJfUk9MRV9BRE1JThACEhwKGFVTRVJfUk9MRV9QTEFURk9STV9BRE1JThADKo0BCg9JbnRlZ3JhdGlvblR5cGUSIAocSU5URUdSQVRJT05fVFlQRV9VTlNQRUNJRklFRBAAEh4KGklOVEVHUkFUSU9OX1RZUEVfTUlDUk9TT0ZUEAESGwoXSU5URUdSQVRJT05fVFlQRV9HT09HTEUQAhIbChdJTlRFR1JBVElPTl9UWVBFX1JFRERJVBADKncKEEludGVncmF0aW9uU3RhdGUSIQodSU5URUdSQVRJT05fU1RBVEVfVU5TUEVDSUZJRUQQABIcChhJTlRFR1JBVElPTl9TVEFURV9BQ1RJVkUQARIiCh5JTlRFR1JBVElPTl9TVEFURV9BVVRIX1JFVk9LRUQQAjKiCAoNUG9ydGFsU2VydmljZRI8CglHZXRDb25maWcSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaFy5kb290YS5wb3J0YWwudjEuQ29uZmlnEjUKBFNlbGYSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaFS5kb290YS5wb3J0YWwudjEuVXNlchJWCg5HZXRJbnRlZ3JhdGlvbhImLmRvb3RhLnBvcnRhbC52MS5HZXRJbnRlZ3JhdGlvblJlcXVlc3QaHC5kb290YS5wb3J0YWwudjEuSW50ZWdyYXRpb24SPgoFQmF0Y2gSGS5kb290YS5wb3J0YWwudjEuQmF0Y2hSZXEaGi5kb290YS5wb3J0YWwudjEuQmF0Y2hSZXNwElQKEkNyZWF0ZUN1c3RvbWVyQ2FzZRImLmRvb3RhLnBvcnRhbC52MS5DcmVhdGVDdXN0b21lckNhc2VSZXEaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSVgoRUGFzc3dvcmRsZXNzU3RhcnQSKS5kb290YS5wb3J0YWwudjEuUGFzc3dvcmRsZXNzU3RhcnRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5ElQKElBhc3N3b3JkbGVzc1ZlcmlmeRIoLmRvb3RhLnBvcnRhbC52MS5QYXNzd29yZGxlc3NTdGFydFZlcmlmeRoULmRvb3RhLnBvcnRhbC52MS5KV1QSSgoNQ3JlYXRlS2V5d29yZBIhLmRvb3RhLnBvcnRhbC52MS5DcmVhdGVLZXl3b3JkUmVxGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EmEKDk9hdXRoQXV0aG9yaXplEiYuZG9vdGEucG9ydGFsLnYxLk9hdXRoQXV0aG9yaXplUmVxdWVzdBonLmRvb3RhLnBvcnRhbC52MS5PYXV0aEF1dGhvcml6ZVJlc3BvbnNlEl4KDU9hdXRoQ2FsbGJhY2sSJS5kb290YS5wb3J0YWwudjEuT2F1dGhDYWxsYmFja1JlcXVlc3QaJi5kb290YS5wb3J0YWwudjEuT2F1dGhDYWxsYmFja1Jlc3BvbnNlEkwKDEFkZFN1YlJlZGRpdBIkLmRvb3RhLnBvcnRhbC52MS5BZGRTdWJSZWRkaXRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ek8KDUdldFN1YlJlZGRpdHMSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaJi5kb290YS5wb3J0YWwudjEuR2V0U3VicmVkZGl0c1Jlc3BvbnNlElIKD1JlbW92ZVN1YlJlZGRpdBInLmRvb3RhLnBvcnRhbC52MS5SZW1vdmVTdWJSZWRkaXRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5QjdaNWdpdGh1Yi5jb20vc2hhbmszMTgvZG9vdGEvcGIvZG9vdGEvcG9ydGFsL3YxO3BicG9ydGFsYgZwcm90bzM", [file_google_protobuf_timestamp, file_google_protobuf_empty]);

/**
 * Describes the message doota.portal.v1.RemoveSubRedditRequest.
 * Use `create(RemoveSubRedditRequestSchema)` to create a new message.
 */
export const RemoveSubRedditRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 0);

/**
 * Describes the message doota.portal.v1.AddSubRedditRequest.
 * Use `create(AddSubRedditRequestSchema)` to create a new message.
 */
export const AddSubRedditRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 1);

/**
 * Describes the message doota.portal.v1.SubReddit.
 * Use `create(SubRedditSchema)` to create a new message.
 */
export const SubRedditSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 2);

/**
 * Describes the message doota.portal.v1.SubRedditMetadata.
 * Use `create(SubRedditMetadataSchema)` to create a new message.
 */
export const SubRedditMetadataSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 3);

/**
 * Describes the message doota.portal.v1.GetSubredditsResponse.
 * Use `create(GetSubredditsResponseSchema)` to create a new message.
 */
export const GetSubredditsResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 4);

/**
 * Describes the message doota.portal.v1.CreateCustomerCaseReq.
 * Use `create(CreateCustomerCaseReqSchema)` to create a new message.
 */
export const CreateCustomerCaseReqSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 5);

/**
 * Describes the message doota.portal.v1.CreateKeywordReq.
 * Use `create(CreateKeywordReqSchema)` to create a new message.
 */
export const CreateKeywordReqSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 6);

/**
 * Describes the message doota.portal.v1.BatchReq.
 * Use `create(BatchReqSchema)` to create a new message.
 */
export const BatchReqSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 7);

/**
 * Describes the message doota.portal.v1.BatchResp.
 * Use `create(BatchRespSchema)` to create a new message.
 */
export const BatchRespSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 8);

/**
 * Describes the message doota.portal.v1.Config.
 * Use `create(ConfigSchema)` to create a new message.
 */
export const ConfigSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 9);

/**
 * Describes the message doota.portal.v1.PasswordlessStartRequest.
 * Use `create(PasswordlessStartRequestSchema)` to create a new message.
 */
export const PasswordlessStartRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 10);

/**
 * Describes the message doota.portal.v1.PasswordlessStartVerify.
 * Use `create(PasswordlessStartVerifySchema)` to create a new message.
 */
export const PasswordlessStartVerifySchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 11);

/**
 * Describes the message doota.portal.v1.AuthStateRequest.
 * Use `create(AuthStateRequestSchema)` to create a new message.
 */
export const AuthStateRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 12);

/**
 * Describes the message doota.portal.v1.State.
 * Use `create(StateSchema)` to create a new message.
 */
export const StateSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 13);

/**
 * Describes the message doota.portal.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 14);

/**
 * Describes the message doota.portal.v1.OauthAuthorizeRequest.
 * Use `create(OauthAuthorizeRequestSchema)` to create a new message.
 */
export const OauthAuthorizeRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 15);

/**
 * Describes the message doota.portal.v1.OauthAuthorizeResponse.
 * Use `create(OauthAuthorizeResponseSchema)` to create a new message.
 */
export const OauthAuthorizeResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 16);

/**
 * Describes the message doota.portal.v1.IssueRequest.
 * Use `create(IssueRequestSchema)` to create a new message.
 */
export const IssueRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 17);

/**
 * Describes the message doota.portal.v1.JWT.
 * Use `create(JWTSchema)` to create a new message.
 */
export const JWTSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 18);

/**
 * Describes the message doota.portal.v1.Organization.
 * Use `create(OrganizationSchema)` to create a new message.
 */
export const OrganizationSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 19);

/**
 * Describes the message doota.portal.v1.OrganizationFeatureFlags.
 * Use `create(OrganizationFeatureFlagsSchema)` to create a new message.
 */
export const OrganizationFeatureFlagsSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 20);

/**
 * Describes the message doota.portal.v1.Integration.
 * Use `create(IntegrationSchema)` to create a new message.
 */
export const IntegrationSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 21);

/**
 * Describes the message doota.portal.v1.GetIntegrationRequest.
 * Use `create(GetIntegrationRequestSchema)` to create a new message.
 */
export const GetIntegrationRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 22);

/**
 * Describes the message doota.portal.v1.AddUserRequest.
 * Use `create(AddUserRequestSchema)` to create a new message.
 */
export const AddUserRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 23);

/**
 * Describes the message doota.portal.v1.RenewUserRequest.
 * Use `create(RenewUserRequestSchema)` to create a new message.
 */
export const RenewUserRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 24);

/**
 * Describes the message doota.portal.v1.MessageSourceOptions.
 * Use `create(MessageSourceOptionsSchema)` to create a new message.
 */
export const MessageSourceOptionsSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 25);

/**
 * Describes the message doota.portal.v1.OauthCallbackRequest.
 * Use `create(OauthCallbackRequestSchema)` to create a new message.
 */
export const OauthCallbackRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 26);

/**
 * Describes the message doota.portal.v1.OauthCallbackResponse.
 * Use `create(OauthCallbackResponseSchema)` to create a new message.
 */
export const OauthCallbackResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 27);

/**
 * Describes the enum doota.portal.v1.OauthAuthorizeType.
 */
export const OauthAuthorizeTypeSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 0);

/**
 * @generated from enum doota.portal.v1.OauthAuthorizeType
 */
export const OauthAuthorizeType = /*@__PURE__*/
  tsEnum(OauthAuthorizeTypeSchema);

/**
 * Describes the enum doota.portal.v1.UserRole.
 */
export const UserRoleSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 1);

/**
 * @generated from enum doota.portal.v1.UserRole
 */
export const UserRole = /*@__PURE__*/
  tsEnum(UserRoleSchema);

/**
 * Describes the enum doota.portal.v1.IntegrationType.
 */
export const IntegrationTypeSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 2);

/**
 * @generated from enum doota.portal.v1.IntegrationType
 */
export const IntegrationType = /*@__PURE__*/
  tsEnum(IntegrationTypeSchema);

/**
 * Describes the enum doota.portal.v1.IntegrationState.
 */
export const IntegrationStateSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 3);

/**
 * @generated from enum doota.portal.v1.IntegrationState
 */
export const IntegrationState = /*@__PURE__*/
  tsEnum(IntegrationStateSchema);

/**
 * @generated from service doota.portal.v1.PortalService
 */
export const PortalService = /*@__PURE__*/
  serviceDesc(file_doota_portal_v1_portal, 0);

