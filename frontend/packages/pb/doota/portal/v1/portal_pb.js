// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file doota/portal/v1/portal.proto (package doota.portal.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_doota_core_v1_core } from "../../core/v1/core_pb";
import { file_doota_core_v1_insight } from "../../core/v1/insight_pb";
import { file_doota_core_v1_post } from "../../core/v1/post_pb";

/**
 * Describes the file doota/portal/v1/portal.proto.
 */
export const file_doota_portal_v1_portal = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_google_protobuf_empty, file_doota_core_v1_core, file_doota_core_v1_insight, file_doota_core_v1_post]);

/**
 * Describes the message doota.portal.v1.GetPostsResponse.
 * Use `create(GetPostsResponseSchema)` to create a new message.
 */
export const GetPostsResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 0);

/**
 * Describes the message doota.portal.v1.InsightsResponse.
 * Use `create(InsightsResponseSchema)` to create a new message.
 */
export const InsightsResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 1);

/**
 * Describes the message doota.portal.v1.UpgradeSubscriptionRequest.
 * Use `create(UpgradeSubscriptionRequestSchema)` to create a new message.
 */
export const UpgradeSubscriptionRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 2);

/**
 * Describes the message doota.portal.v1.InitiateSubscriptionRequest.
 * Use `create(InitiateSubscriptionRequestSchema)` to create a new message.
 */
export const InitiateSubscriptionRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 3);

/**
 * Describes the message doota.portal.v1.InitiateSubscriptionResponse.
 * Use `create(InitiateSubscriptionResponseSchema)` to create a new message.
 */
export const InitiateSubscriptionResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 4);

/**
 * Describes the message doota.portal.v1.VerifySubscriptionRequest.
 * Use `create(VerifySubscriptionRequestSchema)` to create a new message.
 */
export const VerifySubscriptionRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 5);

/**
 * Describes the message doota.portal.v1.GetLeadInteractionsRequest.
 * Use `create(GetLeadInteractionsRequestSchema)` to create a new message.
 */
export const GetLeadInteractionsRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 6);

/**
 * Describes the message doota.portal.v1.GetLeadInteractionsResponse.
 * Use `create(GetLeadInteractionsResponseSchema)` to create a new message.
 */
export const GetLeadInteractionsResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 7);

/**
 * Describes the message doota.portal.v1.ConnectRedditRequest.
 * Use `create(ConnectRedditRequestSchema)` to create a new message.
 */
export const ConnectRedditRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 8);

/**
 * Describes the message doota.portal.v1.ConnectRedditResponse.
 * Use `create(ConnectRedditResponseSchema)` to create a new message.
 */
export const ConnectRedditResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 9);

/**
 * Describes the message doota.portal.v1.UpdateAutomationSettingRequest.
 * Use `create(UpdateAutomationSettingRequestSchema)` to create a new message.
 */
export const UpdateAutomationSettingRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 10);

/**
 * Describes the message doota.portal.v1.CreateKeywordsRes.
 * Use `create(CreateKeywordsResSchema)` to create a new message.
 */
export const CreateKeywordsResSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 11);

/**
 * Describes the message doota.portal.v1.CreateProjectRequest.
 * Use `create(CreateProjectRequestSchema)` to create a new message.
 */
export const CreateProjectRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 12);

/**
 * Describes the message doota.portal.v1.UpdateLeadInteractionStatusRequest.
 * Use `create(UpdateLeadInteractionStatusRequestSchema)` to create a new message.
 */
export const UpdateLeadInteractionStatusRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 13);

/**
 * Describes the message doota.portal.v1.UpdateLeadStatusRequest.
 * Use `create(UpdateLeadStatusRequestSchema)` to create a new message.
 */
export const UpdateLeadStatusRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 14);

/**
 * Describes the message doota.portal.v1.GetRelevantLeadsRequest.
 * Use `create(GetRelevantLeadsRequestSchema)` to create a new message.
 */
export const GetRelevantLeadsRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 15);

/**
 * Describes the message doota.portal.v1.GetLeadsResponse.
 * Use `create(GetLeadsResponseSchema)` to create a new message.
 */
export const GetLeadsResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 16);

/**
 * Describes the message doota.portal.v1.LeadAnalysis.
 * Use `create(LeadAnalysisSchema)` to create a new message.
 */
export const LeadAnalysisSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 17);

/**
 * Describes the message doota.portal.v1.AddSourceRequest.
 * Use `create(AddSourceRequestSchema)` to create a new message.
 */
export const AddSourceRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 18);

/**
 * Describes the message doota.portal.v1.GetSourceResponse.
 * Use `create(GetSourceResponseSchema)` to create a new message.
 */
export const GetSourceResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 19);

/**
 * Describes the message doota.portal.v1.RemoveSourceRequest.
 * Use `create(RemoveSourceRequestSchema)` to create a new message.
 */
export const RemoveSourceRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 20);

/**
 * Describes the message doota.portal.v1.CreateCustomerCaseReq.
 * Use `create(CreateCustomerCaseReqSchema)` to create a new message.
 */
export const CreateCustomerCaseReqSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 21);

/**
 * Describes the message doota.portal.v1.CreateKeywordReq.
 * Use `create(CreateKeywordReqSchema)` to create a new message.
 */
export const CreateKeywordReqSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 22);

/**
 * Describes the message doota.portal.v1.BatchReq.
 * Use `create(BatchReqSchema)` to create a new message.
 */
export const BatchReqSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 23);

/**
 * Describes the message doota.portal.v1.BatchResp.
 * Use `create(BatchRespSchema)` to create a new message.
 */
export const BatchRespSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 24);

/**
 * Describes the message doota.portal.v1.Config.
 * Use `create(ConfigSchema)` to create a new message.
 */
export const ConfigSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 25);

/**
 * Describes the message doota.portal.v1.PasswordlessStartRequest.
 * Use `create(PasswordlessStartRequestSchema)` to create a new message.
 */
export const PasswordlessStartRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 26);

/**
 * Describes the message doota.portal.v1.PasswordlessStartVerify.
 * Use `create(PasswordlessStartVerifySchema)` to create a new message.
 */
export const PasswordlessStartVerifySchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 27);

/**
 * Describes the message doota.portal.v1.AuthStateRequest.
 * Use `create(AuthStateRequestSchema)` to create a new message.
 */
export const AuthStateRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 28);

/**
 * Describes the message doota.portal.v1.State.
 * Use `create(StateSchema)` to create a new message.
 */
export const StateSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 29);

/**
 * Describes the message doota.portal.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 30);

/**
 * Describes the message doota.portal.v1.OauthAuthorizeRequest.
 * Use `create(OauthAuthorizeRequestSchema)` to create a new message.
 */
export const OauthAuthorizeRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 31);

/**
 * Describes the message doota.portal.v1.OauthAuthorizeResponse.
 * Use `create(OauthAuthorizeResponseSchema)` to create a new message.
 */
export const OauthAuthorizeResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 32);

/**
 * Describes the message doota.portal.v1.IssueRequest.
 * Use `create(IssueRequestSchema)` to create a new message.
 */
export const IssueRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 33);

/**
 * Describes the message doota.portal.v1.JWT.
 * Use `create(JWTSchema)` to create a new message.
 */
export const JWTSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 34);

/**
 * Describes the message doota.portal.v1.Organization.
 * Use `create(OrganizationSchema)` to create a new message.
 */
export const OrganizationSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 35);

/**
 * Describes the message doota.portal.v1.OrganizationFeatureFlags.
 * Use `create(OrganizationFeatureFlagsSchema)` to create a new message.
 */
export const OrganizationFeatureFlagsSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 36);

/**
 * Describes the message doota.portal.v1.NotificationSettings.
 * Use `create(NotificationSettingsSchema)` to create a new message.
 */
export const NotificationSettingsSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 37);

/**
 * Describes the message doota.portal.v1.AutomationSetting.
 * Use `create(AutomationSettingSchema)` to create a new message.
 */
export const AutomationSettingSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 38);

/**
 * Describes the message doota.portal.v1.Integration.
 * Use `create(IntegrationSchema)` to create a new message.
 */
export const IntegrationSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 39);

/**
 * Describes the message doota.portal.v1.RedditIntegration.
 * Use `create(RedditIntegrationSchema)` to create a new message.
 */
export const RedditIntegrationSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 40);

/**
 * Describes the message doota.portal.v1.Integrations.
 * Use `create(IntegrationsSchema)` to create a new message.
 */
export const IntegrationsSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 41);

/**
 * Describes the message doota.portal.v1.UpdateIntegrationRequest.
 * Use `create(UpdateIntegrationRequestSchema)` to create a new message.
 */
export const UpdateIntegrationRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 42);

/**
 * Describes the message doota.portal.v1.RevokeIntegrationRequest.
 * Use `create(RevokeIntegrationRequestSchema)` to create a new message.
 */
export const RevokeIntegrationRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 43);

/**
 * Describes the message doota.portal.v1.GetIntegrationRequest.
 * Use `create(GetIntegrationRequestSchema)` to create a new message.
 */
export const GetIntegrationRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 44);

/**
 * Describes the message doota.portal.v1.AddUserRequest.
 * Use `create(AddUserRequestSchema)` to create a new message.
 */
export const AddUserRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 45);

/**
 * Describes the message doota.portal.v1.RenewUserRequest.
 * Use `create(RenewUserRequestSchema)` to create a new message.
 */
export const RenewUserRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 46);

/**
 * Describes the message doota.portal.v1.MessageSourceOptions.
 * Use `create(MessageSourceOptionsSchema)` to create a new message.
 */
export const MessageSourceOptionsSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 47);

/**
 * Describes the message doota.portal.v1.OauthCallbackRequest.
 * Use `create(OauthCallbackRequestSchema)` to create a new message.
 */
export const OauthCallbackRequestSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 48);

/**
 * Describes the message doota.portal.v1.OauthCallbackResponse.
 * Use `create(OauthCallbackResponseSchema)` to create a new message.
 */
export const OauthCallbackResponseSchema = /*@__PURE__*/
  messageDesc(file_doota_portal_v1_portal, 49);

/**
 * Describes the enum doota.portal.v1.DateRangeFilter.
 */
export const DateRangeFilterSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 0);

/**
 * @generated from enum doota.portal.v1.DateRangeFilter
 */
export const DateRangeFilter = /*@__PURE__*/
  tsEnum(DateRangeFilterSchema);

/**
 * Describes the enum doota.portal.v1.OauthAuthorizeType.
 */
export const OauthAuthorizeTypeSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 1);

/**
 * @generated from enum doota.portal.v1.OauthAuthorizeType
 */
export const OauthAuthorizeType = /*@__PURE__*/
  tsEnum(OauthAuthorizeTypeSchema);

/**
 * Describes the enum doota.portal.v1.UserRole.
 */
export const UserRoleSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 2);

/**
 * @generated from enum doota.portal.v1.UserRole
 */
export const UserRole = /*@__PURE__*/
  tsEnum(UserRoleSchema);

/**
 * Describes the enum doota.portal.v1.NotificationFrequency.
 */
export const NotificationFrequencySchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 3);

/**
 * @generated from enum doota.portal.v1.NotificationFrequency
 */
export const NotificationFrequency = /*@__PURE__*/
  tsEnum(NotificationFrequencySchema);

/**
 * Describes the enum doota.portal.v1.IntegrationType.
 */
export const IntegrationTypeSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 4);

/**
 * @generated from enum doota.portal.v1.IntegrationType
 */
export const IntegrationType = /*@__PURE__*/
  tsEnum(IntegrationTypeSchema);

/**
 * Describes the enum doota.portal.v1.IntegrationState.
 */
export const IntegrationStateSchema = /*@__PURE__*/
  enumDesc(file_doota_portal_v1_portal, 5);

/**
 * @generated from enum doota.portal.v1.IntegrationState
 */
export const IntegrationState = /*@__PURE__*/
  tsEnum(IntegrationStateSchema);

/**
 * @generated from service doota.portal.v1.PortalService
 */
export const PortalService = /*@__PURE__*/
  serviceDesc(file_doota_portal_v1_portal, 0);

