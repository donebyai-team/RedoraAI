// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file doota/reddit/v1/reddit.proto (package doota.reddit.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file doota/reddit/v1/reddit.proto.
 */
export declare const file_doota_reddit_v1_reddit: GenFile;

/**
 * @generated from message doota.reddit.v1.Integration
 */
export declare type Integration = Message<"doota.reddit.v1.Integration"> & {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;
};

/**
 * Describes the message doota.reddit.v1.Integration.
 * Use `create(IntegrationSchema)` to create a new message.
 */
export declare const IntegrationSchema: GenMessage<Integration>;

/**
 * @generated from message doota.reddit.v1.RemoveSubRedditRequest
 */
export declare type RemoveSubRedditRequest = Message<"doota.reddit.v1.RemoveSubRedditRequest"> & {
  /**
   * eg. r/SAAS
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message doota.reddit.v1.RemoveSubRedditRequest.
 * Use `create(RemoveSubRedditRequestSchema)` to create a new message.
 */
export declare const RemoveSubRedditRequestSchema: GenMessage<RemoveSubRedditRequest>;

/**
 * @generated from message doota.reddit.v1.AddSubRedditRequest
 */
export declare type AddSubRedditRequest = Message<"doota.reddit.v1.AddSubRedditRequest"> & {
  /**
   * eg. r/SAAS
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message doota.reddit.v1.AddSubRedditRequest.
 * Use `create(AddSubRedditRequestSchema)` to create a new message.
 */
export declare const AddSubRedditRequestSchema: GenMessage<AddSubRedditRequest>;

/**
 * @generated from message doota.reddit.v1.SubReddit
 */
export declare type SubReddit = Message<"doota.reddit.v1.SubReddit"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: doota.reddit.v1.SubRedditMetadata metadata = 5;
   */
  metadata?: SubRedditMetadata;

  /**
   * @generated from field: optional string title = 6;
   */
  title?: string;
};

/**
 * Describes the message doota.reddit.v1.SubReddit.
 * Use `create(SubRedditSchema)` to create a new message.
 */
export declare const SubRedditSchema: GenMessage<SubReddit>;

/**
 * @generated from message doota.reddit.v1.SubRedditMetadata
 */
export declare type SubRedditMetadata = Message<"doota.reddit.v1.SubRedditMetadata"> & {
};

/**
 * Describes the message doota.reddit.v1.SubRedditMetadata.
 * Use `create(SubRedditMetadataSchema)` to create a new message.
 */
export declare const SubRedditMetadataSchema: GenMessage<SubRedditMetadata>;

/**
 * @generated from message doota.reddit.v1.GetSubredditsResponse
 */
export declare type GetSubredditsResponse = Message<"doota.reddit.v1.GetSubredditsResponse"> & {
  /**
   * @generated from field: repeated doota.reddit.v1.SubReddit subreddits = 1;
   */
  subreddits: SubReddit[];
};

/**
 * Describes the message doota.reddit.v1.GetSubredditsResponse.
 * Use `create(GetSubredditsResponseSchema)` to create a new message.
 */
export declare const GetSubredditsResponseSchema: GenMessage<GetSubredditsResponse>;

/**
 * @generated from message doota.reddit.v1.UpdateLeadStatusRequest
 */
export declare type UpdateLeadStatusRequest = Message<"doota.reddit.v1.UpdateLeadStatusRequest"> & {
  /**
   * @generated from field: doota.reddit.v1.LeadStatus status = 1;
   */
  status: LeadStatus;

  /**
   * @generated from field: string lead_id = 2;
   */
  leadId: string;
};

/**
 * Describes the message doota.reddit.v1.UpdateLeadStatusRequest.
 * Use `create(UpdateLeadStatusRequestSchema)` to create a new message.
 */
export declare const UpdateLeadStatusRequestSchema: GenMessage<UpdateLeadStatusRequest>;

/**
 * @generated from message doota.reddit.v1.GetLeadsByStatusRequest
 */
export declare type GetLeadsByStatusRequest = Message<"doota.reddit.v1.GetLeadsByStatusRequest"> & {
  /**
   * @generated from field: doota.reddit.v1.LeadStatus status = 1;
   */
  status: LeadStatus;
};

/**
 * Describes the message doota.reddit.v1.GetLeadsByStatusRequest.
 * Use `create(GetLeadsByStatusRequestSchema)` to create a new message.
 */
export declare const GetLeadsByStatusRequestSchema: GenMessage<GetLeadsByStatusRequest>;

/**
 * @generated from message doota.reddit.v1.GetRelevantLeadsRequest
 */
export declare type GetRelevantLeadsRequest = Message<"doota.reddit.v1.GetRelevantLeadsRequest"> & {
  /**
   * @generated from field: optional string sub_reddit = 1;
   */
  subReddit?: string;

  /**
   * @generated from field: float relevancy_score = 2;
   */
  relevancyScore: number;
};

/**
 * Describes the message doota.reddit.v1.GetRelevantLeadsRequest.
 * Use `create(GetRelevantLeadsRequestSchema)` to create a new message.
 */
export declare const GetRelevantLeadsRequestSchema: GenMessage<GetRelevantLeadsRequest>;

/**
 * @generated from message doota.reddit.v1.GetLeadsResponse
 */
export declare type GetLeadsResponse = Message<"doota.reddit.v1.GetLeadsResponse"> & {
  /**
   * @generated from field: repeated doota.reddit.v1.RedditLead leads = 1;
   */
  leads: RedditLead[];
};

/**
 * Describes the message doota.reddit.v1.GetLeadsResponse.
 * Use `create(GetLeadsResponseSchema)` to create a new message.
 */
export declare const GetLeadsResponseSchema: GenMessage<GetLeadsResponse>;

/**
 * @generated from message doota.reddit.v1.LeadMetadata
 */
export declare type LeadMetadata = Message<"doota.reddit.v1.LeadMetadata"> & {
  /**
   * @generated from field: string chain_of_thought = 1;
   */
  chainOfThought: string;

  /**
   * @generated from field: string suggested_comment = 2;
   */
  suggestedComment: string;

  /**
   * @generated from field: string suggested_dm = 3;
   */
  suggestedDm: string;

  /**
   * @generated from field: string chain_of_thought_suggested_comment = 4;
   */
  chainOfThoughtSuggestedComment: string;

  /**
   * @generated from field: string chain_of_thought_suggested_dm = 5;
   */
  chainOfThoughtSuggestedDm: string;

  /**
   * @generated from field: string post_url = 6;
   */
  postUrl: string;

  /**
   * @generated from field: string description_html = 7;
   */
  descriptionHtml: string;

  /**
   * @generated from field: string subreddit_prefixed = 8;
   */
  subredditPrefixed: string;

  /**
   * @generated from field: int64 no_of_comments = 9;
   */
  noOfComments: bigint;

  /**
   * @generated from field: int64 ups = 10;
   */
  ups: bigint;

  /**
   * @generated from field: string author_url = 11;
   */
  authorUrl: string;

  /**
   * @generated from field: string dm_url = 12;
   */
  dmUrl: string;
};

/**
 * Describes the message doota.reddit.v1.LeadMetadata.
 * Use `create(LeadMetadataSchema)` to create a new message.
 */
export declare const LeadMetadataSchema: GenMessage<LeadMetadata>;

/**
 * @generated from message doota.reddit.v1.RedditLead
 */
export declare type RedditLead = Message<"doota.reddit.v1.RedditLead"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * @generated from field: string subreddit_id = 3;
   */
  subredditId: string;

  /**
   * @generated from field: string author = 4;
   */
  author: string;

  /**
   * @generated from field: string post_id = 5;
   */
  postId: string;

  /**
   * @generated from field: doota.reddit.v1.LeadType type = 6;
   */
  type: LeadType;

  /**
   * @generated from field: doota.reddit.v1.LeadStatus status = 7;
   */
  status: LeadStatus;

  /**
   * @generated from field: double relevancy_score = 8;
   */
  relevancyScore: number;

  /**
   * @generated from field: google.protobuf.Timestamp post_created_at = 9;
   */
  postCreatedAt?: Timestamp;

  /**
   * @generated from field: optional string title = 10;
   */
  title?: string;

  /**
   * @generated from field: string description = 11;
   */
  description: string;

  /**
   * @generated from field: doota.reddit.v1.LeadMetadata metadata = 12;
   */
  metadata?: LeadMetadata;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 13;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message doota.reddit.v1.RedditLead.
 * Use `create(RedditLeadSchema)` to create a new message.
 */
export declare const RedditLeadSchema: GenMessage<RedditLead>;

/**
 * @generated from enum doota.reddit.v1.LeadStatus
 */
export enum LeadStatus {
  /**
   * @generated from enum value: NEW = 0;
   */
  NEW = 0,

  /**
   * @generated from enum value: NOT_RELEVANT = 1;
   */
  NOT_RELEVANT = 1,

  /**
   * @generated from enum value: COMPLETED = 3;
   */
  COMPLETED = 3,
}

/**
 * Describes the enum doota.reddit.v1.LeadStatus.
 */
export declare const LeadStatusSchema: GenEnum<LeadStatus>;

/**
 * @generated from enum doota.reddit.v1.LeadType
 */
export enum LeadType {
  /**
   * @generated from enum value: POST = 0;
   */
  POST = 0,

  /**
   * @generated from enum value: COMMENT = 1;
   */
  COMMENT = 1,
}

/**
 * Describes the enum doota.reddit.v1.LeadType.
 */
export declare const LeadTypeSchema: GenEnum<LeadType>;

